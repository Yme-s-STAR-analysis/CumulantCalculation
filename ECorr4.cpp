// Zhang Yu -- Dec 2020
// Yige Huang revision June 3 2024
// For 4th order, 16.09.2024
#include "TProfile.h"
#include "TH1D.h"
#include "TFile.h"
#include "TGraphErrors.h"
#include <fstream>
#include <stdlib.h>
#include "TRandom3.h"
#include <sys/mman.h>
#include <sys/types.h>
#include <unistd.h>
#include <stdio.h>
#include <fcntl.h>
#include <time.h>
#include <cmath>
#include "TKey.h"
#include <map>
#include "TMath.h"
#include "TString.h"
#include "ECorr4.h"
#include <iostream>

using std::pow;
using std::sqrt;

ECorr::ECorr(const char* type, int MaxMult, int lowCut) : ParticleType(type), _nMultBin(MaxMult+1), LowEventCut(lowCut) {
	std::cout << "[LOG] ECorr: Construction" << std::endl;
}

ECorr::~ECorr() {}

void ECorr::Init() {

  	hEntries = new TH1D(Form("%shEntries", ParticleType),";Mult;Counts", _nMultBin, -0.5, _nMultBin-0.5);
	_sC[0] = new TH1D(Form("%sC1", ParticleType), ";Mult;C_{1}", _nMultBin, -0.5, _nMultBin-0.5);
	_sC[1] = new TH1D(Form("%sC2", ParticleType), ";Mult;C_{2}", _nMultBin, -0.5, _nMultBin-0.5);
	_sC[2] = new TH1D(Form("%sC3", ParticleType), ";Mult;C_{3}", _nMultBin, -0.5, _nMultBin-0.5);
	_sC[3] = new TH1D(Form("%sC4", ParticleType), ";Mult;C_{4}", _nMultBin, -0.5, _nMultBin-0.5);

	_sR21  = new TH1D(Form("%sR21", ParticleType), ";Mult;C_{2}/C_{1}", _nMultBin, -0.5, _nMultBin-0.5);
	_sR32  = new TH1D(Form("%sR32", ParticleType), ";Mult;C_{3}/C_{2}", _nMultBin, -0.5, _nMultBin-0.5);
	_sR42  = new TH1D(Form("%sR42", ParticleType), ";Mult;C_{4}/C_{2}", _nMultBin, -0.5, _nMultBin-0.5);

	_sk[0] = new TH1D(Form("%sk1", ParticleType), ";Mult;#kappa_{1}", _nMultBin, -0.5, _nMultBin-0.5);
	_sk[1] = new TH1D(Form("%sk2", ParticleType), ";Mult;#kappa_{2}", _nMultBin, -0.5, _nMultBin-0.5);
	_sk[2] = new TH1D(Form("%sk3", ParticleType), ";Mult;#kappa_{3}", _nMultBin, -0.5, _nMultBin-0.5);
	_sk[3] = new TH1D(Form("%sk4", ParticleType), ";Mult;#kappa_{4}", _nMultBin, -0.5, _nMultBin-0.5);

	_sk21 = new TH1D(Form("%sk21" ,ParticleType),";Mult;#kappa_{2}/#kappa_{1}", _nMultBin, -0.5, _nMultBin-0.5);
	_sk31 = new TH1D(Form("%sk31" ,ParticleType),";Mult;#kappa_{3}/#kappa_{1}", _nMultBin, -0.5, _nMultBin-0.5);
	_sk41 = new TH1D(Form("%sk41" ,ParticleType),";Mult;#kappa_{4}/#kappa_{1}", _nMultBin, -0.5, _nMultBin-0.5);

	// new quantities
	_sppb = new TH1D(Form("%sppb", ParticleType), ";Mult;<p+#bar{p}>", _nMultBin, -0.5, _nMultBin-0.5);
	_sR2s = new TH1D(Form("%sR2s", ParticleType), ";Mult;C_{2}/<p+#bar{p}>", _nMultBin, -0.5, _nMultBin-0.5);
	_sR3s = new TH1D(Form("%sR3s", ParticleType), ";Mult;C_{3}/<p+#bar{p}>", _nMultBin, -0.5, _nMultBin-0.5);
	_sR31 = new TH1D(Form("%sR31", ParticleType), ";Mult;C_{3}/C_{1}", _nMultBin, -0.5, _nMultBin-0.5);

}

void ECorr::Calculate() {
	Double_t tc1, tc2, tc3, tc4;
	Double_t tk1, tk2, tk3, tk4;
	Double_t etc1, etc2, etc3, etc4;
	Double_t etk1, etk2, etk3, etk4;
	Double_t er21, er32, er42;
	Double_t ek21, ek31, ek41;
	// new quantities
	Double_t tppb, eppb, er2s, er3s, er31;
	Double_t v[_nTerms+1] = { 0.0 };
	for(int iBin=1; iBin<=_nMultBin; ++iBin) {
		tc1 = tc2 = tc3 = tc4 = 0; 
		tk1 = tk2 = tk3 = tk4 = 0; 
		etc1 = etc2 = etc3 = etc4 = 0; 
		etk1 = etk2 = etk3 = etk4 = 0; 
		er21 = er32 = er42 = 0;
		ek21 = ek31 = ek41 = 0;
		tppb = eppb = er2s = er3s = er31 = 0;
		int BinEntries = _V[1]->GetBinEntries(iBin);
		// if(BinEntries < LowEventCut) { continue; }
		for(int i=1; i<= _nTerms; ++i) {
			v[i] = _V[i]->GetBinContent(iBin);
		}
		//==== Formula Tag: C1
			tc1 = v[219];
		//==== Formula Tag: C2
		//==== Formula Tag: C3
		//==== Formula Tag: C4
		//==== Formula Tag: C1 error
		//==== Formula Tag: C2 error
		//==== Formula Tag: C3 error
		//==== Formula Tag: C4 error

		//==== Formula Tag: R21 error
		//==== Formula Tag: R32 error
	
		//==== Formula Tag: R42 error

		// Formula Tag: kappa
		if (strcmp(ParticleType, "Netp") != 0) { // skip netproton's kappa
			//==== Formula Tag: k1->k4
				tk1 = tc1;
				tk2 = tc2 -    tc1;
				tk3 = tc3 -  3*tc2  + 2*tc1;
				tk4 = tc4 -  6*tc3 + 11*tc2 -   6*tc1;

			//==== Formula Tag: k1 error
				etk1 = etc1; 
			//==== Formula Tag: k2 error
				etk2 = sqrt(fabs(-pow(v[208], 2) - 2*v[208]*v[221] + 2*v[208]*v[220] + 2*v[137] - 2*v[134] + v[193] - pow(v[221], 2) + 2*v[221]*v[220] + v[210] - 2*v[169] - pow(v[220], 2) + v[198] + (-2*v[219] - 1)*(-v[219]*v[208] + v[202]) + (-2*v[219] - 1)*(-v[219]*v[221] + v[161]) - (-2*v[219] - 1)*(-v[219]*v[220] + v[174]) + (-2*v[219] - 1)*(-v[219]*v[208] - v[219]*v[221] + v[219]*v[220] + v[202] + v[161] - v[174] + (-2*v[219] - 1)*(-pow(v[219], 2) + v[208]))) / BinEntries);
			//==== Formula Tag: k3 error
				etk3 = sqrt(fabs(9*v[81] - 18*v[39] + 9*v[86] - pow(v[202], 2) - 6*v[202]*v[161] + 6*v[202]*v[174] - 2*v[202]*v[218] + 6*v[202]*v[215] - 4*v[202]*v[214] + 2*v[140] - 6*v[147] + 4*v[93] + 6*v[90] - 6*v[116] + v[196] - 9*pow(v[161], 2) + 18*v[161]*v[174] - 6*v[161]*v[218] + 18*v[161]*v[215] - 12*v[161]*v[214] + 6*v[46] - 18*v[53] + 12*v[43] - 9*pow(v[174], 2) + 6*v[174]*v[218] - 18*v[174]*v[215] + 12*v[174]*v[214] - 6*v[59] + 18*v[65] - 12*v[64] - pow(v[218], 2) + 6*v[218]*v[215] - 4*v[218]*v[214] + v[204] - 6*v[177] + 4*v[157] - 9*pow(v[215], 2) + 12*v[215]*v[214] + 9*v[212] - 12*v[179] - 4*pow(v[214], 2) + 4*v[197] - 3*(-3*v[219] - 3)*(v[72] - v[174]*v[221]) + (-3*v[219] - 3)*(-v[208]*v[202] + v[207]) + 3*(-3*v[219] - 3)*(-v[208]*v[161] + v[145]) - 3*(-3*v[219] - 3)*(-v[208]*v[174] + v[129]) + (-3*v[219] - 3)*(-v[208]*v[218] + v[126]) - 3*(-3*v[219] - 3)*(-v[208]*v[215] + v[89]) + 2*(-3*v[219] - 3)*(-v[208]*v[214] + v[127]) + (-3*v[219] - 3)*(-v[202]*v[221] + v[145]) + 3*(-3*v[219] - 3)*(-v[161]*v[221] + v[107]) + (-3*v[219] - 3)*(-v[221]*v[218] + v[171]) - 3*(-3*v[219] - 3)*(-v[221]*v[215] + v[181]) + 2*(-3*v[219] - 3)*(-v[221]*v[214] + v[172]) + (-3*v[219] - 3)*(-v[208]*v[202] - 3*v[208]*v[161] + 3*v[208]*v[174] - v[208]*v[218] + 3*v[208]*v[215] - 2*v[208]*v[214] + v[126] - 3*v[89] + 2*v[127] + 3*v[145] - 3*v[129] + v[207] + (-3*v[219] - 3)*(-pow(v[208], 2) + v[193]) + (-3*v[219] - 3)*(-v[208]*v[221] + v[137]) + (3*v[219] + 3)*(-v[208]*v[220] + v[134]) + (-v[219]*v[208] + v[202])*(6*pow(v[219], 2) + 6*v[219] - 3*v[208] - 3*v[221] + 3*v[220] + 2)) + (-3*v[219] - 3)*(-v[202]*v[221] + v[145] - 3*v[161]*v[221] + 3*v[107] - 3*v[72] + 3*v[174]*v[221] - v[221]*v[218] + 3*v[221]*v[215] - 2*v[221]*v[214] + v[171] - 3*v[181] + 2*v[172] + (-3*v[219] - 3)*(-pow(v[221], 2) + v[210]) + (-3*v[219] - 3)*(-v[208]*v[221] + v[137]) + (3*v[219] + 3)*(-v[221]*v[220] + v[169]) + (-v[219]*v[221] + v[161])*(6*pow(v[219], 2) + 6*v[219] - 3*v[208] - 3*v[221] + 3*v[220] + 2)) + (3*v[219] + 3)*(-v[202]*v[220] + v[129]) + 3*(3*v[219] + 3)*(-v[161]*v[220] + v[72]) - 3*(3*v[219] + 3)*(-v[174]*v[220] + v[94]) + (3*v[219] + 3)*(-v[220]*v[218] + v[188]) - 3*(3*v[219] + 3)*(-v[220]*v[215] + v[159]) + 2*(3*v[219] + 3)*(-v[220]*v[214] + v[162]) + (3*v[219] + 3)*(-v[202]*v[220] + v[129] - 3*v[161]*v[220] + 3*v[72] + 3*v[174]*v[220] - 3*v[94] - v[220]*v[218] + 3*v[220]*v[215] - 2*v[220]*v[214] + v[188] - 3*v[159] + 2*v[162] + (-3*v[219] - 3)*(-v[208]*v[220] + v[134]) + (-3*v[219] - 3)*(-v[221]*v[220] + v[169]) + (3*v[219] + 3)*(-pow(v[220], 2) + v[198]) + (-v[219]*v[220] + v[174])*(6*pow(v[219], 2) + 6*v[219] - 3*v[208] - 3*v[221] + 3*v[220] + 2)) + (-v[219]*v[202] + v[193])*(6*pow(v[219], 2) + 6*v[219] - 3*v[208] - 3*v[221] + 3*v[220] + 2) + 3*(-v[219]*v[161] + v[137])*(6*pow(v[219], 2) + 6*v[219] - 3*v[208] - 3*v[221] + 3*v[220] + 2) - 3*(-v[219]*v[174] + v[134])*(6*pow(v[219], 2) + 6*v[219] - 3*v[208] - 3*v[221] + 3*v[220] + 2) + (-v[219]*v[218] + v[152])*(6*pow(v[219], 2) + 6*v[219] - 3*v[208] - 3*v[221] + 3*v[220] + 2) - 3*(-v[219]*v[215] + v[185])*(6*pow(v[219], 2) + 6*v[219] - 3*v[208] - 3*v[221] + 3*v[220] + 2) + 2*(-v[219]*v[214] + v[163])*(6*pow(v[219], 2) + 6*v[219] - 3*v[208] - 3*v[221] + 3*v[220] + 2) + (6*pow(v[219], 2) + 6*v[219] - 3*v[208] - 3*v[221] + 3*v[220] + 2)*(-v[219]*v[202] - 3*v[219]*v[161] + 3*v[219]*v[174] - v[219]*v[218] + 3*v[219]*v[215] - 2*v[219]*v[214] + 3*v[137] - 3*v[134] + v[193] + v[152] - 3*v[185] + 2*v[163] + (-3*v[219] - 3)*(-v[219]*v[208] + v[202]) + (-3*v[219] - 3)*(-v[219]*v[221] + v[161]) + (3*v[219] + 3)*(-v[219]*v[220] + v[174]) + (-pow(v[219], 2) + v[208])*(6*pow(v[219], 2) + 6*v[219] - 3*v[208] - 3*v[221] + 3*v[220] + 2))) / BinEntries);
			//==== Formula Tag: k4 error
				etk4 = sqrt(fabs(-36*pow(v[137], 2) + 72*v[137]*v[134] - 12*v[137]*v[193] - 48*v[137]*v[152] + 144*v[137]*v[185] - 96*v[137]*v[163] - 36*v[137]*v[210] + 72*v[137]*v[169] - 36*v[137]*v[198] - 12*v[137]*v[217] + 84*v[137]*v[216] - 144*v[137]*v[222] + 72*v[137]*v[213] - 108*v[4] + 36*v[85] + 108*v[5] + 12*v[34] - 84*v[10] + 144*v[9] - 72*v[15] - 36*pow(v[134], 2) + 12*v[134]*v[193] + 48*v[134]*v[152] - 144*v[134]*v[185] + 96*v[134]*v[163] + 36*v[134]*v[210] - 72*v[134]*v[169] + 36*v[134]*v[198] + 12*v[134]*v[217] - 84*v[134]*v[216] + 144*v[134]*v[222] - 72*v[134]*v[213] - 36*v[88] - 12*v[20] + 84*v[32] - 144*v[35] + 72*v[21] + 16*v[80] - 96*v[13] + 64*v[31] + 144*v[77] - 192*v[11] + 64*v[78] + 48*v[28] - 144*v[16] + 96*v[19] - 48*v[18] + 144*v[29] - 96*v[26] - pow(v[193], 2) - 8*v[193]*v[152] + 24*v[193]*v[185] - 16*v[193]*v[163] - 6*v[193]*v[210] + 12*v[193]*v[169] - 6*v[193]*v[198] - 2*v[193]*v[217] + 14*v[193]*v[216] - 24*v[193]*v[222] + 12*v[193]*v[213] + 42*v[83] - 84*v[24] + 42*v[79] + 2*v[141] - 14*v[108] + 24*v[91] - 12*v[98] + 8*v[142] - 24*v[114] + 16*v[135] + 12*v[102] - 12*v[101] + v[195] + 24*v[22] - 72*v[14] + 48*v[6] - 48*v[2] + 144*v[1] - 96*v[3] + 24*v[17] - 72*v[36] + 48*v[7] - 16*pow(v[152], 2) + 96*v[152]*v[185] - 64*v[152]*v[163] - 24*v[152]*v[210] + 48*v[152]*v[169] - 24*v[152]*v[198] - 8*v[152]*v[217] + 56*v[152]*v[216] - 96*v[152]*v[222] + 48*v[152]*v[213] + 8*v[50] - 56*v[57] + 96*v[75] - 48*v[61] - 144*pow(v[185], 2) + 192*v[185]*v[163] + 72*v[185]*v[210] - 144*v[185]*v[169] + 72*v[185]*v[198] + 24*v[185]*v[217] - 168*v[185]*v[216] + 288*v[185]*v[222] - 144*v[185]*v[213] - 24*v[48] + 168*v[56] - 288*v[71] + 144*v[68] - 64*pow(v[163], 2) - 48*v[163]*v[210] + 96*v[163]*v[169] - 48*v[163]*v[198] - 16*v[163]*v[217] + 112*v[163]*v[216] - 192*v[163]*v[222] + 96*v[163]*v[213] + 16*v[51] - 112*v[62] + 192*v[66] - 96*v[73] - 9*pow(v[210], 2) + 36*v[210]*v[169] - 18*v[210]*v[198] - 6*v[210]*v[217] + 42*v[210]*v[216] - 72*v[210]*v[222] + 36*v[210]*v[213] + 54*v[84] + 6*v[143] - 42*v[117] + 72*v[128] - 36*v[131] - 36*v[99] + 9*v[199] - 36*pow(v[169], 2) + 36*v[169]*v[198] + 12*v[169]*v[217] - 84*v[169]*v[216] + 144*v[169]*v[222] - 72*v[169]*v[213] - 36*v[122] - 12*v[52] + 84*v[41] - 144*v[45] + 72*v[49] - 9*pow(v[198], 2) - 6*v[198]*v[217] + 42*v[198]*v[216] - 72*v[198]*v[222] + 36*v[198]*v[213] + 6*v[144] - 42*v[123] + 72*v[111] - 36*v[95] + 9*v[205] - pow(v[217], 2) + 14*v[217]*v[216] - 24*v[217]*v[222] + 12*v[217]*v[213] + v[211] - 14*v[182] + 24*v[191] - 12*v[192] - 49*pow(v[216], 2) + 168*v[216]*v[222] - 84*v[216]*v[213] + 49*v[200] - 168*v[164] + 84*v[165] - 144*pow(v[222], 2) + 144*v[222]*v[213] + 144*v[209] - 144*v[151] - 36*pow(v[213], 2) + 36*v[201] + 4*(-12*v[219] - 18)*(v[23] - v[161]*v[152]) - 12*(-12*v[219] - 18)*(v[33] - v[161]*v[185]) + 8*(-12*v[219] - 18)*(v[25] - v[161]*v[163]) + 6*(-12*v[219] - 18)*(-v[137]*v[161] + v[82]) - 6*(-12*v[219] - 18)*(-v[134]*v[161] + v[30]) + (-12*v[219] - 18)*(-v[193]*v[161] + v[120]) + 3*(-12*v[219] - 18)*(-v[161]*v[210] + v[138]) - 6*(-12*v[219] - 18)*(-v[161]*v[169] + v[12]) + 3*(-12*v[219] - 18)*(-v[161]*v[198] + v[27]) + (-12*v[219] - 18)*(-v[161]*v[217] + v[40]) - 7*(-12*v[219] - 18)*(-v[161]*v[216] + v[74]) + 12*(-12*v[219] - 18)*(-v[161]*v[222] + v[47]) - 6*(-12*v[219] - 18)*(-v[161]*v[213] + v[55]) + (-12*v[219] - 18)*(-6*v[137]*v[161] + 4*v[23] - 12*v[33] + 8*v[25] + 6*v[134]*v[161] + 6*v[82] - 6*v[30] - v[193]*v[161] + v[120] - 4*v[161]*v[152] + 12*v[161]*v[185] - 8*v[161]*v[163] - 3*v[161]*v[210] + 6*v[161]*v[169] - 3*v[161]*v[198] - v[161]*v[217] + 7*v[161]*v[216] - 12*v[161]*v[222] + 6*v[161]*v[213] - 6*v[12] + 3*v[138] + 3*v[27] + v[40] - 7*v[74] + 12*v[47] - 6*v[55] + (-12*v[219] - 18)*(v[81] - pow(v[161], 2)) + (-8*v[219] - 12)*(-v[161]*v[214] + v[43]) + (-4*v[219] - 6)*(-v[202]*v[161] + v[90]) + (-4*v[219] - 6)*(-v[161]*v[218] + v[46]) + (12*v[219] + 18)*(v[39] - v[161]*v[174]) + (12*v[219] + 18)*(-v[161]*v[215] + v[53]) + (-v[219]*v[161] + v[137])*(-24*pow(v[219], 3) - 36*pow(v[219], 2) + 24*v[219]*v[208] + 24*v[219]*v[221] - 24*v[219]*v[220] - 22*v[219] + 18*v[208] - 4*v[202] - 12*v[161] + 12*v[174] + 18*v[221] - 18*v[220] - 4*v[218] + 12*v[215] - 8*v[214] - 6) + (-v[208]*v[161] + v[145])*(12*pow(v[219], 2) + 18*v[219] - 6*v[208] - 6*v[221] + 6*v[220] + 11) + (-v[161]*v[221] + v[107])*(12*pow(v[219], 2) + 18*v[219] - 6*v[208] - 6*v[221] + 6*v[220] + 11) + (-v[161]*v[220] + v[72])*(-12*pow(v[219], 2) - 18*v[219] + 6*v[208] + 6*v[221] - 6*v[220] - 11)) + 6*(-8*v[219] - 12)*(-v[137]*v[214] + v[25]) - 6*(-8*v[219] - 12)*(-v[134]*v[214] + v[38]) + (-8*v[219] - 12)*(-v[193]*v[214] + v[104]) + 4*(-8*v[219] - 12)*(-v[152]*v[214] + v[70]) - 12*(-8*v[219] - 12)*(-v[185]*v[214] + v[44]) + 8*(-8*v[219] - 12)*(-v[163]*v[214] + v[125]) + 3*(-8*v[219] - 12)*(-v[210]*v[214] + v[113]) - 6*(-8*v[219] - 12)*(-v[169]*v[214] + v[42]) + 3*(-8*v[219] - 12)*(-v[198]*v[214] + v[139]) + (-8*v[219] - 12)*(-v[214]*v[217] + v[175]) - 7*(-8*v[219] - 12)*(-v[214]*v[216] + v[150]) + 12*(-8*v[219] - 12)*(-v[214]*v[222] + v[156]) - 6*(-8*v[219] - 12)*(-v[214]*v[213] + v[148]) + (-8*v[219] - 12)*(-6*v[137]*v[214] + 6*v[25] + 6*v[134]*v[214] - 6*v[38] - v[193]*v[214] + v[104] - 4*v[152]*v[214] + 4*v[70] + 12*v[185]*v[214] - 12*v[44] - 8*v[163]*v[214] + 8*v[125] - 3*v[210]*v[214] + 3*v[113] + 6*v[169]*v[214] - 6*v[42] - 3*v[198]*v[214] + 3*v[139] - v[214]*v[217] + 7*v[214]*v[216] - 12*v[214]*v[222] + 6*v[214]*v[213] + v[175] - 7*v[150] + 12*v[156] - 6*v[148] + (-12*v[219] - 18)*(-v[161]*v[214] + v[43]) + (-8*v[219] - 12)*(-pow(v[214], 2) + v[197]) + (-4*v[219] - 6)*(-v[202]*v[214] + v[93]) + (-4*v[219] - 6)*(-v[218]*v[214] + v[157]) + (12*v[219] + 18)*(-v[174]*v[214] + v[64]) + (12*v[219] + 18)*(-v[215]*v[214] + v[179]) + (-v[219]*v[214] + v[163])*(-24*pow(v[219], 3) - 36*pow(v[219], 2) + 24*v[219]*v[208] + 24*v[219]*v[221] - 24*v[219]*v[220] - 22*v[219] + 18*v[208] - 4*v[202] - 12*v[161] + 12*v[174] + 18*v[221] - 18*v[220] - 4*v[218] + 12*v[215] - 8*v[214] - 6) + (-v[208]*v[214] + v[127])*(12*pow(v[219], 2) + 18*v[219] - 6*v[208] - 6*v[221] + 6*v[220] + 11) + (-v[221]*v[214] + v[172])*(12*pow(v[219], 2) + 18*v[219] - 6*v[208] - 6*v[221] + 6*v[220] + 11) + (-v[220]*v[214] + v[162])*(-12*pow(v[219], 2) - 18*v[219] + 6*v[208] + 6*v[221] - 6*v[220] - 11)) - 12*(-4*v[219] - 6)*(v[76] - v[185]*v[218]) + 8*(-4*v[219] - 6)*(v[70] - v[163]*v[218]) + 6*(-4*v[219] - 6)*(-v[137]*v[202] + v[120]) + 6*(-4*v[219] - 6)*(-v[137]*v[218] + v[23]) - 6*(-4*v[219] - 6)*(-v[134]*v[202] + v[121]) - 6*(-4*v[219] - 6)*(-v[134]*v[218] + v[8]) + (-4*v[219] - 6)*(-v[202]*v[193] + v[203]) + 4*(-4*v[219] - 6)*(-v[202]*v[152] + v[109]) - 12*(-4*v[219] - 6)*(-v[202]*v[185] + v[103]) + 8*(-4*v[219] - 6)*(-v[202]*v[163] + v[104]) + 3*(-4*v[219] - 6)*(-v[202]*v[210] + v[82]) - 6*(-4*v[219] - 6)*(-v[202]*v[169] + v[30]) + 3*(-4*v[219] - 6)*(-v[202]*v[198] + v[87]) + (-4*v[219] - 6)*(-v[202]*v[217] + v[130]) - 7*(-4*v[219] - 6)*(-v[202]*v[216] + v[112]) + 12*(-4*v[219] - 6)*(-v[202]*v[222] + v[96]) - 6*(-4*v[219] - 6)*(-v[202]*v[213] + v[146]) + (-4*v[219] - 6)*(-v[193]*v[218] + v[109]) + 4*(-4*v[219] - 6)*(-v[152]*v[218] + v[136]) + 3*(-4*v[219] - 6)*(-v[210]*v[218] + v[118]) - 6*(-4*v[219] - 6)*(-v[169]*v[218] + v[63]) + 3*(-4*v[219] - 6)*(-v[198]*v[218] + v[105]) + (-4*v[219] - 6)*(-v[218]*v[217] + v[168]) - 7*(-4*v[219] - 6)*(-v[218]*v[216] + v[149]) + 12*(-4*v[219] - 6)*(-v[218]*v[222] + v[166]) - 6*(-4*v[219] - 6)*(-v[218]*v[213] + v[170]) + (-4*v[219] - 6)*(-6*v[137]*v[202] + 6*v[134]*v[202] - v[202]*v[193] - 4*v[202]*v[152] + 12*v[202]*v[185] - 8*v[202]*v[163] - 3*v[202]*v[210] + 6*v[202]*v[169] - 3*v[202]*v[198] - v[202]*v[217] + 7*v[202]*v[216] - 12*v[202]*v[222] + 6*v[202]*v[213] + 3*v[82] - 6*v[30] + 3*v[87] + v[130] - 7*v[112] + 12*v[96] - 6*v[146] + 4*v[109] - 12*v[103] + 8*v[104] + 6*v[120] - 6*v[121] + v[203] + (-12*v[219] - 18)*(-v[202]*v[161] + v[90]) + (-8*v[219] - 12)*(-v[202]*v[214] + v[93]) + (-4*v[219] - 6)*(-pow(v[202], 2) + v[196]) + (-4*v[219] - 6)*(-v[202]*v[218] + v[140]) + (12*v[219] + 18)*(-v[202]*v[174] + v[116]) + (12*v[219] + 18)*(-v[202]*v[215] + v[147]) + (-v[219]*v[202] + v[193])*(-24*pow(v[219], 3) - 36*pow(v[219], 2) + 24*v[219]*v[208] + 24*v[219]*v[221] - 24*v[219]*v[220] - 22*v[219] + 18*v[208] - 4*v[202] - 12*v[161] + 12*v[174] + 18*v[221] - 18*v[220] - 4*v[218] + 12*v[215] - 8*v[214] - 6) + (-v[208]*v[202] + v[207])*(12*pow(v[219], 2) + 18*v[219] - 6*v[208] - 6*v[221] + 6*v[220] + 11) + (-v[202]*v[221] + v[145])*(12*pow(v[219], 2) + 18*v[219] - 6*v[208] - 6*v[221] + 6*v[220] + 11) + (-v[202]*v[220] + v[129])*(-12*pow(v[219], 2) - 18*v[219] + 6*v[208] + 6*v[221] - 6*v[220] - 11)) + (-4*v[219] - 6)*(-6*v[137]*v[218] + 6*v[23] + 6*v[134]*v[218] - 6*v[8] - v[193]*v[218] + v[109] - 4*v[152]*v[218] + 4*v[136] - 12*v[76] + 8*v[70] + 12*v[185]*v[218] - 8*v[163]*v[218] - 3*v[210]*v[218] + 3*v[118] + 6*v[169]*v[218] - 6*v[63] - 3*v[198]*v[218] + 3*v[105] - v[218]*v[217] + 7*v[218]*v[216] - 12*v[218]*v[222] + 6*v[218]*v[213] + v[168] - 7*v[149] + 12*v[166] - 6*v[170] + (-12*v[219] - 18)*(-v[161]*v[218] + v[46]) + (-8*v[219] - 12)*(-v[218]*v[214] + v[157]) + (-4*v[219] - 6)*(-pow(v[218], 2) + v[204]) + (-4*v[219] - 6)*(-v[202]*v[218] + v[140]) + (12*v[219] + 18)*(-v[174]*v[218] + v[59]) + (12*v[219] + 18)*(-v[218]*v[215] + v[177]) + (-v[219]*v[218] + v[152])*(-24*pow(v[219], 3) - 36*pow(v[219], 2) + 24*v[219]*v[208] + 24*v[219]*v[221] - 24*v[219]*v[220] - 22*v[219] + 18*v[208] - 4*v[202] - 12*v[161] + 12*v[174] + 18*v[221] - 18*v[220] - 4*v[218] + 12*v[215] - 8*v[214] - 6) + (-v[208]*v[218] + v[126])*(12*pow(v[219], 2) + 18*v[219] - 6*v[208] - 6*v[221] + 6*v[220] + 11) + (-v[221]*v[218] + v[171])*(12*pow(v[219], 2) + 18*v[219] - 6*v[208] - 6*v[221] + 6*v[220] + 11) + (-v[220]*v[218] + v[188])*(-12*pow(v[219], 2) - 18*v[219] + 6*v[208] + 6*v[221] - 6*v[220] - 11)) + 4*(12*v[219] + 18)*(v[8] - v[174]*v[152]) - 12*(12*v[219] + 18)*(v[37] - v[174]*v[185]) + 8*(12*v[219] + 18)*(v[38] - v[174]*v[163]) + 3*(12*v[219] + 18)*(v[12] - v[174]*v[210]) - 6*(12*v[219] + 18)*(v[27] - v[174]*v[169]) + 8*(12*v[219] + 18)*(v[44] - v[163]*v[215]) + 6*(12*v[219] + 18)*(-v[137]*v[174] + v[30]) + 6*(12*v[219] + 18)*(-v[137]*v[215] + v[33]) - 6*(12*v[219] + 18)*(-v[134]*v[174] + v[87]) - 6*(12*v[219] + 18)*(-v[134]*v[215] + v[37]) + (12*v[219] + 18)*(-v[193]*v[174] + v[121]) + (12*v[219] + 18)*(-v[193]*v[215] + v[103]) + 3*(12*v[219] + 18)*(-v[174]*v[198] + v[100]) + (12*v[219] + 18)*(-v[174]*v[217] + v[60]) - 7*(12*v[219] + 18)*(-v[174]*v[216] + v[54]) + 12*(12*v[219] + 18)*(-v[174]*v[222] + v[67]) - 6*(12*v[219] + 18)*(-v[174]*v[213] + v[58]) + 4*(12*v[219] + 18)*(-v[152]*v[215] + v[76]) - 12*(12*v[219] + 18)*(-v[185]*v[215] + v[132]) + 3*(12*v[219] + 18)*(-v[210]*v[215] + v[119]) - 6*(12*v[219] + 18)*(-v[169]*v[215] + v[69]) + 3*(12*v[219] + 18)*(-v[198]*v[215] + v[124]) + (12*v[219] + 18)*(-v[215]*v[217] + v[184]) - 7*(12*v[219] + 18)*(-v[215]*v[216] + v[178]) + 12*(12*v[219] + 18)*(-v[215]*v[222] + v[154]) - 6*(12*v[219] + 18)*(-v[215]*v[213] + v[190]) + (12*v[219] + 18)*(-6*v[137]*v[174] + 6*v[134]*v[174] + 4*v[8] - 12*v[37] + 8*v[38] + 6*v[30] - 6*v[87] - v[193]*v[174] + v[121] + 3*v[12] - 6*v[27] - 4*v[174]*v[152] + 12*v[174]*v[185] - 8*v[174]*v[163] - 3*v[174]*v[210] + 6*v[174]*v[169] - 3*v[174]*v[198] - v[174]*v[217] + 7*v[174]*v[216] - 12*v[174]*v[222] + 6*v[174]*v[213] + 3*v[100] + v[60] - 7*v[54] + 12*v[67] - 6*v[58] + (-12*v[219] - 18)*(v[39] - v[161]*v[174]) + (-8*v[219] - 12)*(-v[174]*v[214] + v[64]) + (-4*v[219] - 6)*(-v[202]*v[174] + v[116]) + (-4*v[219] - 6)*(-v[174]*v[218] + v[59]) + (12*v[219] + 18)*(v[86] - pow(v[174], 2)) + (12*v[219] + 18)*(-v[174]*v[215] + v[65]) + (v[72] - v[174]*v[221])*(12*pow(v[219], 2) + 18*v[219] - 6*v[208] - 6*v[221] + 6*v[220] + 11) + (-v[219]*v[174] + v[134])*(-24*pow(v[219], 3) - 36*pow(v[219], 2) + 24*v[219]*v[208] + 24*v[219]*v[221] - 24*v[219]*v[220] - 22*v[219] + 18*v[208] - 4*v[202] - 12*v[161] + 12*v[174] + 18*v[221] - 18*v[220] - 4*v[218] + 12*v[215] - 8*v[214] - 6) + (-v[208]*v[174] + v[129])*(12*pow(v[219], 2) + 18*v[219] - 6*v[208] - 6*v[221] + 6*v[220] + 11) + (-v[174]*v[220] + v[94])*(-12*pow(v[219], 2) - 18*v[219] + 6*v[208] + 6*v[221] - 6*v[220] - 11)) + (12*v[219] + 18)*(-6*v[137]*v[215] + 6*v[33] + 6*v[134]*v[215] - 6*v[37] - v[193]*v[215] + v[103] - 4*v[152]*v[215] + 4*v[76] + 12*v[185]*v[215] - 12*v[132] + 8*v[44] - 8*v[163]*v[215] - 3*v[210]*v[215] + 3*v[119] + 6*v[169]*v[215] - 6*v[69] - 3*v[198]*v[215] + 3*v[124] - v[215]*v[217] + 7*v[215]*v[216] - 12*v[215]*v[222] + 6*v[215]*v[213] + v[184] - 7*v[178] + 12*v[154] - 6*v[190] + (-12*v[219] - 18)*(-v[161]*v[215] + v[53]) + (-8*v[219] - 12)*(-v[215]*v[214] + v[179]) + (-4*v[219] - 6)*(-v[202]*v[215] + v[147]) + (-4*v[219] - 6)*(-v[218]*v[215] + v[177]) + (12*v[219] + 18)*(-pow(v[215], 2) + v[212]) + (12*v[219] + 18)*(-v[174]*v[215] + v[65]) + (-v[219]*v[215] + v[185])*(-24*pow(v[219], 3) - 36*pow(v[219], 2) + 24*v[219]*v[208] + 24*v[219]*v[221] - 24*v[219]*v[220] - 22*v[219] + 18*v[208] - 4*v[202] - 12*v[161] + 12*v[174] + 18*v[221] - 18*v[220] - 4*v[218] + 12*v[215] - 8*v[214] - 6) + (-v[208]*v[215] + v[89])*(12*pow(v[219], 2) + 18*v[219] - 6*v[208] - 6*v[221] + 6*v[220] + 11) + (-v[221]*v[215] + v[181])*(12*pow(v[219], 2) + 18*v[219] - 6*v[208] - 6*v[221] + 6*v[220] + 11) + (-v[220]*v[215] + v[159])*(-12*pow(v[219], 2) - 18*v[219] + 6*v[208] + 6*v[221] - 6*v[220] - 11)) - 6*(v[39] - v[134]*v[221])*(12*pow(v[219], 2) + 18*v[219] - 6*v[208] - 6*v[221] + 6*v[220] + 11) + 4*(v[46] - v[152]*v[221])*(12*pow(v[219], 2) + 18*v[219] - 6*v[208] - 6*v[221] + 6*v[220] + 11) - 12*(v[53] - v[185]*v[221])*(12*pow(v[219], 2) + 18*v[219] - 6*v[208] - 6*v[221] + 6*v[220] + 11) + 8*(v[43] - v[163]*v[221])*(12*pow(v[219], 2) + 18*v[219] - 6*v[208] - 6*v[221] + 6*v[220] + 11) + 4*(v[59] - v[152]*v[220])*(-12*pow(v[219], 2) - 18*v[219] + 6*v[208] + 6*v[221] - 6*v[220] - 11) - 12*(v[65] - v[185]*v[220])*(-12*pow(v[219], 2) - 18*v[219] + 6*v[208] + 6*v[221] - 6*v[220] - 11) + 8*(v[64] - v[163]*v[220])*(-12*pow(v[219], 2) - 18*v[219] + 6*v[208] + 6*v[221] - 6*v[220] - 11) + 6*(-v[219]*v[137] + v[145])*(-24*pow(v[219], 3) - 36*pow(v[219], 2) + 24*v[219]*v[208] + 24*v[219]*v[221] - 24*v[219]*v[220] - 22*v[219] + 18*v[208] - 4*v[202] - 12*v[161] + 12*v[174] + 18*v[221] - 18*v[220] - 4*v[218] + 12*v[215] - 8*v[214] - 6) - 6*(-v[219]*v[134] + v[129])*(-24*pow(v[219], 3) - 36*pow(v[219], 2) + 24*v[219]*v[208] + 24*v[219]*v[221] - 24*v[219]*v[220] - 22*v[219] + 18*v[208] - 4*v[202] - 12*v[161] + 12*v[174] + 18*v[221] - 18*v[220] - 4*v[218] + 12*v[215] - 8*v[214] - 6) + (-v[219]*v[193] + v[207])*(-24*pow(v[219], 3) - 36*pow(v[219], 2) + 24*v[219]*v[208] + 24*v[219]*v[221] - 24*v[219]*v[220] - 22*v[219] + 18*v[208] - 4*v[202] - 12*v[161] + 12*v[174] + 18*v[221] - 18*v[220] - 4*v[218] + 12*v[215] - 8*v[214] - 6) + 4*(-v[219]*v[152] + v[126])*(-24*pow(v[219], 3) - 36*pow(v[219], 2) + 24*v[219]*v[208] + 24*v[219]*v[221] - 24*v[219]*v[220] - 22*v[219] + 18*v[208] - 4*v[202] - 12*v[161] + 12*v[174] + 18*v[221] - 18*v[220] - 4*v[218] + 12*v[215] - 8*v[214] - 6) - 12*(-v[219]*v[185] + v[89])*(-24*pow(v[219], 3) - 36*pow(v[219], 2) + 24*v[219]*v[208] + 24*v[219]*v[221] - 24*v[219]*v[220] - 22*v[219] + 18*v[208] - 4*v[202] - 12*v[161] + 12*v[174] + 18*v[221] - 18*v[220] - 4*v[218] + 12*v[215] - 8*v[214] - 6) + 8*(-v[219]*v[163] + v[127])*(-24*pow(v[219], 3) - 36*pow(v[219], 2) + 24*v[219]*v[208] + 24*v[219]*v[221] - 24*v[219]*v[220] - 22*v[219] + 18*v[208] - 4*v[202] - 12*v[161] + 12*v[174] + 18*v[221] - 18*v[220] - 4*v[218] + 12*v[215] - 8*v[214] - 6) + 3*(-v[219]*v[210] + v[107])*(-24*pow(v[219], 3) - 36*pow(v[219], 2) + 24*v[219]*v[208] + 24*v[219]*v[221] - 24*v[219]*v[220] - 22*v[219] + 18*v[208] - 4*v[202] - 12*v[161] + 12*v[174] + 18*v[221] - 18*v[220] - 4*v[218] + 12*v[215] - 8*v[214] - 6) - 6*(-v[219]*v[169] + v[72])*(-24*pow(v[219], 3) - 36*pow(v[219], 2) + 24*v[219]*v[208] + 24*v[219]*v[221] - 24*v[219]*v[220] - 22*v[219] + 18*v[208] - 4*v[202] - 12*v[161] + 12*v[174] + 18*v[221] - 18*v[220] - 4*v[218] + 12*v[215] - 8*v[214] - 6) + 3*(-v[219]*v[198] + v[94])*(-24*pow(v[219], 3) - 36*pow(v[219], 2) + 24*v[219]*v[208] + 24*v[219]*v[221] - 24*v[219]*v[220] - 22*v[219] + 18*v[208] - 4*v[202] - 12*v[161] + 12*v[174] + 18*v[221] - 18*v[220] - 4*v[218] + 12*v[215] - 8*v[214] - 6) + (-v[219]*v[217] + v[176])*(-24*pow(v[219], 3) - 36*pow(v[219], 2) + 24*v[219]*v[208] + 24*v[219]*v[221] - 24*v[219]*v[220] - 22*v[219] + 18*v[208] - 4*v[202] - 12*v[161] + 12*v[174] + 18*v[221] - 18*v[220] - 4*v[218] + 12*v[215] - 8*v[214] - 6) - 7*(-v[219]*v[216] + v[186])*(-24*pow(v[219], 3) - 36*pow(v[219], 2) + 24*v[219]*v[208] + 24*v[219]*v[221] - 24*v[219]*v[220] - 22*v[219] + 18*v[208] - 4*v[202] - 12*v[161] + 12*v[174] + 18*v[221] - 18*v[220] - 4*v[218] + 12*v[215] - 8*v[214] - 6) + 12*(-v[219]*v[222] + v[187])*(-24*pow(v[219], 3) - 36*pow(v[219], 2) + 24*v[219]*v[208] + 24*v[219]*v[221] - 24*v[219]*v[220] - 22*v[219] + 18*v[208] - 4*v[202] - 12*v[161] + 12*v[174] + 18*v[221] - 18*v[220] - 4*v[218] + 12*v[215] - 8*v[214] - 6) - 6*(-v[219]*v[213] + v[183])*(-24*pow(v[219], 3) - 36*pow(v[219], 2) + 24*v[219]*v[208] + 24*v[219]*v[221] - 24*v[219]*v[220] - 22*v[219] + 18*v[208] - 4*v[202] - 12*v[161] + 12*v[174] + 18*v[221] - 18*v[220] - 4*v[218] + 12*v[215] - 8*v[214] - 6) + 6*(-v[208]*v[137] + v[90])*(12*pow(v[219], 2) + 18*v[219] - 6*v[208] - 6*v[221] + 6*v[220] + 11) - 6*(-v[208]*v[134] + v[116])*(12*pow(v[219], 2) + 18*v[219] - 6*v[208] - 6*v[221] + 6*v[220] + 11) + (-v[208]*v[193] + v[196])*(12*pow(v[219], 2) + 18*v[219] - 6*v[208] - 6*v[221] + 6*v[220] + 11) + 4*(-v[208]*v[152] + v[140])*(12*pow(v[219], 2) + 18*v[219] - 6*v[208] - 6*v[221] + 6*v[220] + 11) - 12*(-v[208]*v[185] + v[147])*(12*pow(v[219], 2) + 18*v[219] - 6*v[208] - 6*v[221] + 6*v[220] + 11) + 8*(-v[208]*v[163] + v[93])*(12*pow(v[219], 2) + 18*v[219] - 6*v[208] - 6*v[221] + 6*v[220] + 11) + 3*(-v[208]*v[210] + v[81])*(12*pow(v[219], 2) + 18*v[219] - 6*v[208] - 6*v[221] + 6*v[220] + 11) - 6*(-v[208]*v[169] + v[39])*(12*pow(v[219], 2) + 18*v[219] - 6*v[208] - 6*v[221] + 6*v[220] + 11) + 3*(-v[208]*v[198] + v[86])*(12*pow(v[219], 2) + 18*v[219] - 6*v[208] - 6*v[221] + 6*v[220] + 11) + (-v[208]*v[217] + v[110])*(12*pow(v[219], 2) + 18*v[219] - 6*v[208] - 6*v[221] + 6*v[220] + 11) - 7*(-v[208]*v[216] + v[106])*(12*pow(v[219], 2) + 18*v[219] - 6*v[208] - 6*v[221] + 6*v[220] + 11) + 12*(-v[208]*v[222] + v[115])*(12*pow(v[219], 2) + 18*v[219] - 6*v[208] - 6*v[221] + 6*v[220] + 11) - 6*(-v[208]*v[213] + v[92])*(12*pow(v[219], 2) + 18*v[219] - 6*v[208] - 6*v[221] + 6*v[220] + 11) + 6*(-v[137]*v[221] + v[81])*(12*pow(v[219], 2) + 18*v[219] - 6*v[208] - 6*v[221] + 6*v[220] + 11) + 6*(-v[137]*v[220] + v[39])*(-12*pow(v[219], 2) - 18*v[219] + 6*v[208] + 6*v[221] - 6*v[220] - 11) - 6*(-v[134]*v[220] + v[86])*(-12*pow(v[219], 2) - 18*v[219] + 6*v[208] + 6*v[221] - 6*v[220] - 11) + (-v[193]*v[221] + v[90])*(12*pow(v[219], 2) + 18*v[219] - 6*v[208] - 6*v[221] + 6*v[220] + 11) + (-v[193]*v[220] + v[116])*(-12*pow(v[219], 2) - 18*v[219] + 6*v[208] + 6*v[221] - 6*v[220] - 11) + 3*(-v[221]*v[210] + v[206])*(12*pow(v[219], 2) + 18*v[219] - 6*v[208] - 6*v[221] + 6*v[220] + 11) - 6*(-v[221]*v[169] + v[97])*(12*pow(v[219], 2) + 18*v[219] - 6*v[208] - 6*v[221] + 6*v[220] + 11) + 3*(-v[221]*v[198] + v[133])*(12*pow(v[219], 2) + 18*v[219] - 6*v[208] - 6*v[221] + 6*v[220] + 11) + (-v[221]*v[217] + v[160])*(12*pow(v[219], 2) + 18*v[219] - 6*v[208] - 6*v[221] + 6*v[220] + 11) - 7*(-v[221]*v[216] + v[167])*(12*pow(v[219], 2) + 18*v[219] - 6*v[208] - 6*v[221] + 6*v[220] + 11) + 12*(-v[221]*v[222] + v[155])*(12*pow(v[219], 2) + 18*v[219] - 6*v[208] - 6*v[221] + 6*v[220] + 11) - 6*(-v[221]*v[213] + v[173])*(12*pow(v[219], 2) + 18*v[219] - 6*v[208] - 6*v[221] + 6*v[220] + 11) + 3*(-v[210]*v[220] + v[97])*(-12*pow(v[219], 2) - 18*v[219] + 6*v[208] + 6*v[221] - 6*v[220] - 11) - 6*(-v[169]*v[220] + v[133])*(-12*pow(v[219], 2) - 18*v[219] + 6*v[208] + 6*v[221] - 6*v[220] - 11) + 3*(-v[220]*v[198] + v[194])*(-12*pow(v[219], 2) - 18*v[219] + 6*v[208] + 6*v[221] - 6*v[220] - 11) + (-v[220]*v[217] + v[153])*(-12*pow(v[219], 2) - 18*v[219] + 6*v[208] + 6*v[221] - 6*v[220] - 11) - 7*(-v[220]*v[216] + v[180])*(-12*pow(v[219], 2) - 18*v[219] + 6*v[208] + 6*v[221] - 6*v[220] - 11) + 12*(-v[220]*v[222] + v[158])*(-12*pow(v[219], 2) - 18*v[219] + 6*v[208] + 6*v[221] - 6*v[220] - 11) - 6*(-v[220]*v[213] + v[189])*(-12*pow(v[219], 2) - 18*v[219] + 6*v[208] + 6*v[221] - 6*v[220] - 11) + (-12*pow(v[219], 2) - 18*v[219] + 6*v[208] + 6*v[221] - 6*v[220] - 11)*(-6*v[137]*v[220] + 6*v[39] + 6*v[134]*v[220] - 6*v[86] - v[193]*v[220] + v[116] + 4*v[59] - 12*v[65] + 8*v[64] - 4*v[152]*v[220] + 12*v[185]*v[220] - 8*v[163]*v[220] - 3*v[210]*v[220] + 3*v[97] + 6*v[169]*v[220] - 6*v[133] - 3*v[220]*v[198] - v[220]*v[217] + 7*v[220]*v[216] - 12*v[220]*v[222] + 6*v[220]*v[213] + 3*v[194] + v[153] - 7*v[180] + 12*v[158] - 6*v[189] + (-12*v[219] - 18)*(-v[161]*v[220] + v[72]) + (-8*v[219] - 12)*(-v[220]*v[214] + v[162]) + (-4*v[219] - 6)*(-v[202]*v[220] + v[129]) + (-4*v[219] - 6)*(-v[220]*v[218] + v[188]) + (12*v[219] + 18)*(-v[174]*v[220] + v[94]) + (12*v[219] + 18)*(-v[220]*v[215] + v[159]) + (-pow(v[220], 2) + v[198])*(-12*pow(v[219], 2) - 18*v[219] + 6*v[208] + 6*v[221] - 6*v[220] - 11) + (-v[219]*v[220] + v[174])*(-24*pow(v[219], 3) - 36*pow(v[219], 2) + 24*v[219]*v[208] + 24*v[219]*v[221] - 24*v[219]*v[220] - 22*v[219] + 18*v[208] - 4*v[202] - 12*v[161] + 12*v[174] + 18*v[221] - 18*v[220] - 4*v[218] + 12*v[215] - 8*v[214] - 6) + (-v[208]*v[220] + v[134])*(12*pow(v[219], 2) + 18*v[219] - 6*v[208] - 6*v[221] + 6*v[220] + 11) + (-v[221]*v[220] + v[169])*(12*pow(v[219], 2) + 18*v[219] - 6*v[208] - 6*v[221] + 6*v[220] + 11)) + (12*pow(v[219], 2) + 18*v[219] - 6*v[208] - 6*v[221] + 6*v[220] + 11)*(-6*v[208]*v[137] + 6*v[208]*v[134] - v[208]*v[193] - 4*v[208]*v[152] + 12*v[208]*v[185] - 8*v[208]*v[163] - 3*v[208]*v[210] + 6*v[208]*v[169] - 3*v[208]*v[198] - v[208]*v[217] + 7*v[208]*v[216] - 12*v[208]*v[222] + 6*v[208]*v[213] + 3*v[81] - 6*v[39] + 3*v[86] + v[110] - 7*v[106] + 12*v[115] - 6*v[92] + 4*v[140] - 12*v[147] + 8*v[93] + 6*v[90] - 6*v[116] + v[196] + (-12*v[219] - 18)*(-v[208]*v[161] + v[145]) + (-8*v[219] - 12)*(-v[208]*v[214] + v[127]) + (-4*v[219] - 6)*(-v[208]*v[202] + v[207]) + (-4*v[219] - 6)*(-v[208]*v[218] + v[126]) + (12*v[219] + 18)*(-v[208]*v[174] + v[129]) + (12*v[219] + 18)*(-v[208]*v[215] + v[89]) + (-pow(v[208], 2) + v[193])*(12*pow(v[219], 2) + 18*v[219] - 6*v[208] - 6*v[221] + 6*v[220] + 11) + (-v[219]*v[208] + v[202])*(-24*pow(v[219], 3) - 36*pow(v[219], 2) + 24*v[219]*v[208] + 24*v[219]*v[221] - 24*v[219]*v[220] - 22*v[219] + 18*v[208] - 4*v[202] - 12*v[161] + 12*v[174] + 18*v[221] - 18*v[220] - 4*v[218] + 12*v[215] - 8*v[214] - 6) + (-v[208]*v[221] + v[137])*(12*pow(v[219], 2) + 18*v[219] - 6*v[208] - 6*v[221] + 6*v[220] + 11) + (-v[208]*v[220] + v[134])*(-12*pow(v[219], 2) - 18*v[219] + 6*v[208] + 6*v[221] - 6*v[220] - 11)) + (12*pow(v[219], 2) + 18*v[219] - 6*v[208] - 6*v[221] + 6*v[220] + 11)*(-6*v[137]*v[221] + 6*v[81] - 6*v[39] + 6*v[134]*v[221] - v[193]*v[221] + v[90] + 4*v[46] - 12*v[53] + 8*v[43] - 4*v[152]*v[221] + 12*v[185]*v[221] - 8*v[163]*v[221] - 3*v[221]*v[210] + 6*v[221]*v[169] - 3*v[221]*v[198] - v[221]*v[217] + 7*v[221]*v[216] - 12*v[221]*v[222] + 6*v[221]*v[213] - 6*v[97] + 3*v[206] + 3*v[133] + v[160] - 7*v[167] + 12*v[155] - 6*v[173] + (-12*v[219] - 18)*(-v[161]*v[221] + v[107]) + (-8*v[219] - 12)*(-v[221]*v[214] + v[172]) + (-4*v[219] - 6)*(-v[202]*v[221] + v[145]) + (-4*v[219] - 6)*(-v[221]*v[218] + v[171]) + (12*v[219] + 18)*(v[72] - v[174]*v[221]) + (12*v[219] + 18)*(-v[221]*v[215] + v[181]) + (-pow(v[221], 2) + v[210])*(12*pow(v[219], 2) + 18*v[219] - 6*v[208] - 6*v[221] + 6*v[220] + 11) + (-v[219]*v[221] + v[161])*(-24*pow(v[219], 3) - 36*pow(v[219], 2) + 24*v[219]*v[208] + 24*v[219]*v[221] - 24*v[219]*v[220] - 22*v[219] + 18*v[208] - 4*v[202] - 12*v[161] + 12*v[174] + 18*v[221] - 18*v[220] - 4*v[218] + 12*v[215] - 8*v[214] - 6) + (-v[208]*v[221] + v[137])*(12*pow(v[219], 2) + 18*v[219] - 6*v[208] - 6*v[221] + 6*v[220] + 11) + (-v[221]*v[220] + v[169])*(-12*pow(v[219], 2) - 18*v[219] + 6*v[208] + 6*v[221] - 6*v[220] - 11)) + (-24*pow(v[219], 3) - 36*pow(v[219], 2) + 24*v[219]*v[208] + 24*v[219]*v[221] - 24*v[219]*v[220] - 22*v[219] + 18*v[208] - 4*v[202] - 12*v[161] + 12*v[174] + 18*v[221] - 18*v[220] - 4*v[218] + 12*v[215] - 8*v[214] - 6)*(-6*v[219]*v[137] + 6*v[219]*v[134] - v[219]*v[193] - 4*v[219]*v[152] + 12*v[219]*v[185] - 8*v[219]*v[163] - 3*v[219]*v[210] + 6*v[219]*v[169] - 3*v[219]*v[198] - v[219]*v[217] + 7*v[219]*v[216] - 12*v[219]*v[222] + 6*v[219]*v[213] + 4*v[126] - 12*v[89] + 8*v[127] + 6*v[145] - 6*v[129] + v[207] + 3*v[107] - 6*v[72] + 3*v[94] + v[176] - 7*v[186] + 12*v[187] - 6*v[183] + (-12*v[219] - 18)*(-v[219]*v[161] + v[137]) + (-8*v[219] - 12)*(-v[219]*v[214] + v[163]) + (-4*v[219] - 6)*(-v[219]*v[202] + v[193]) + (-4*v[219] - 6)*(-v[219]*v[218] + v[152]) + (12*v[219] + 18)*(-v[219]*v[174] + v[134]) + (12*v[219] + 18)*(-v[219]*v[215] + v[185]) + (-pow(v[219], 2) + v[208])*(-24*pow(v[219], 3) - 36*pow(v[219], 2) + 24*v[219]*v[208] + 24*v[219]*v[221] - 24*v[219]*v[220] - 22*v[219] + 18*v[208] - 4*v[202] - 12*v[161] + 12*v[174] + 18*v[221] - 18*v[220] - 4*v[218] + 12*v[215] - 8*v[214] - 6) + (-v[219]*v[208] + v[202])*(12*pow(v[219], 2) + 18*v[219] - 6*v[208] - 6*v[221] + 6*v[220] + 11) + (-v[219]*v[221] + v[161])*(12*pow(v[219], 2) + 18*v[219] - 6*v[208] - 6*v[221] + 6*v[220] + 11) + (-v[219]*v[220] + v[174])*(-12*pow(v[219], 2) - 18*v[219] + 6*v[208] + 6*v[221] - 6*v[220] - 11))) / BinEntries);
			//==== Formula Tag: k21 error
				ek21 = sqrt(fabs(((-2*v[219] - 1)/v[219] - (-pow(v[219], 2) - v[219] + v[208] + v[221] - v[220])/pow(v[219], 2))*((-pow(v[219], 2) + v[208])*((-2*v[219] - 1)/v[219] - (-pow(v[219], 2) - v[219] + v[208] + v[221] - v[220])/pow(v[219], 2)) + (-v[219]*v[208] + v[202])/v[219] + (-v[219]*v[221] + v[161])/v[219] - (-v[219]*v[220] + v[174])/v[219]) + (((-2*v[219] - 1)/v[219] - (-pow(v[219], 2) - v[219] + v[208] + v[221] - v[220])/pow(v[219], 2))*(-v[219]*v[208] + v[202]) + (-pow(v[208], 2) + v[193])/v[219] + (-v[208]*v[221] + v[137])/v[219] - (-v[208]*v[220] + v[134])/v[219])/v[219] + (((-2*v[219] - 1)/v[219] - (-pow(v[219], 2) - v[219] + v[208] + v[221] - v[220])/pow(v[219], 2))*(-v[219]*v[221] + v[161]) + (-pow(v[221], 2) + v[210])/v[219] + (-v[208]*v[221] + v[137])/v[219] - (-v[221]*v[220] + v[169])/v[219])/v[219] - (((-2*v[219] - 1)/v[219] - (-pow(v[219], 2) - v[219] + v[208] + v[221] - v[220])/pow(v[219], 2))*(-v[219]*v[220] + v[174]) - (-pow(v[220], 2) + v[198])/v[219] + (-v[208]*v[220] + v[134])/v[219] + (-v[221]*v[220] + v[169])/v[219])/v[219]) / BinEntries);
			//==== Formula Tag: k31 error
				ek31 = sqrt(fabs(((6*pow(v[219], 2) + 6*v[219] - 3*v[208] - 3*v[221] + 3*v[220] + 2)/v[219] - (2*pow(v[219], 3) + 3*pow(v[219], 2) - 3*v[219]*v[208] - 3*v[219]*v[221] + 3*v[219]*v[220] + 2*v[219] - 3*v[208] + v[202] + 3*v[161] - 3*v[174] - 3*v[221] + 3*v[220] + v[218] - 3*v[215] + 2*v[214])/pow(v[219], 2))*((-pow(v[219], 2) + v[208])*((6*pow(v[219], 2) + 6*v[219] - 3*v[208] - 3*v[221] + 3*v[220] + 2)/v[219] - (2*pow(v[219], 3) + 3*pow(v[219], 2) - 3*v[219]*v[208] - 3*v[219]*v[221] + 3*v[219]*v[220] + 2*v[219] - 3*v[208] + v[202] + 3*v[161] - 3*v[174] - 3*v[221] + 3*v[220] + v[218] - 3*v[215] + 2*v[214])/pow(v[219], 2)) + (-3*v[219] - 3)*(-v[219]*v[208] + v[202])/v[219] + (-3*v[219] - 3)*(-v[219]*v[221] + v[161])/v[219] + (3*v[219] + 3)*(-v[219]*v[220] + v[174])/v[219] + (-v[219]*v[202] + v[193])/v[219] + 3*(-v[219]*v[161] + v[137])/v[219] - 3*(-v[219]*v[174] + v[134])/v[219] + (-v[219]*v[218] + v[152])/v[219] - 3*(-v[219]*v[215] + v[185])/v[219] + 2*(-v[219]*v[214] + v[163])/v[219]) + (-3*v[219] - 3)*(((6*pow(v[219], 2) + 6*v[219] - 3*v[208] - 3*v[221] + 3*v[220] + 2)/v[219] - (2*pow(v[219], 3) + 3*pow(v[219], 2) - 3*v[219]*v[208] - 3*v[219]*v[221] + 3*v[219]*v[220] + 2*v[219] - 3*v[208] + v[202] + 3*v[161] - 3*v[174] - 3*v[221] + 3*v[220] + v[218] - 3*v[215] + 2*v[214])/pow(v[219], 2))*(-v[219]*v[208] + v[202]) + (-3*v[219] - 3)*(-pow(v[208], 2) + v[193])/v[219] + (-3*v[219] - 3)*(-v[208]*v[221] + v[137])/v[219] + (3*v[219] + 3)*(-v[208]*v[220] + v[134])/v[219] + (-v[208]*v[202] + v[207])/v[219] + 3*(-v[208]*v[161] + v[145])/v[219] - 3*(-v[208]*v[174] + v[129])/v[219] + (-v[208]*v[218] + v[126])/v[219] - 3*(-v[208]*v[215] + v[89])/v[219] + 2*(-v[208]*v[214] + v[127])/v[219])/v[219] + (-3*v[219] - 3)*(((6*pow(v[219], 2) + 6*v[219] - 3*v[208] - 3*v[221] + 3*v[220] + 2)/v[219] - (2*pow(v[219], 3) + 3*pow(v[219], 2) - 3*v[219]*v[208] - 3*v[219]*v[221] + 3*v[219]*v[220] + 2*v[219] - 3*v[208] + v[202] + 3*v[161] - 3*v[174] - 3*v[221] + 3*v[220] + v[218] - 3*v[215] + 2*v[214])/pow(v[219], 2))*(-v[219]*v[221] + v[161]) + (-3*v[219] - 3)*(-pow(v[221], 2) + v[210])/v[219] + (-3*v[219] - 3)*(-v[208]*v[221] + v[137])/v[219] + (3*v[219] + 3)*(-v[221]*v[220] + v[169])/v[219] - 3*(v[72] - v[174]*v[221])/v[219] + (-v[202]*v[221] + v[145])/v[219] + 3*(-v[161]*v[221] + v[107])/v[219] + (-v[221]*v[218] + v[171])/v[219] - 3*(-v[221]*v[215] + v[181])/v[219] + 2*(-v[221]*v[214] + v[172])/v[219])/v[219] + (3*v[219] + 3)*(((6*pow(v[219], 2) + 6*v[219] - 3*v[208] - 3*v[221] + 3*v[220] + 2)/v[219] - (2*pow(v[219], 3) + 3*pow(v[219], 2) - 3*v[219]*v[208] - 3*v[219]*v[221] + 3*v[219]*v[220] + 2*v[219] - 3*v[208] + v[202] + 3*v[161] - 3*v[174] - 3*v[221] + 3*v[220] + v[218] - 3*v[215] + 2*v[214])/pow(v[219], 2))*(-v[219]*v[220] + v[174]) + (-3*v[219] - 3)*(-v[208]*v[220] + v[134])/v[219] + (-3*v[219] - 3)*(-v[221]*v[220] + v[169])/v[219] + (3*v[219] + 3)*(-pow(v[220], 2) + v[198])/v[219] + (-v[202]*v[220] + v[129])/v[219] + 3*(-v[161]*v[220] + v[72])/v[219] - 3*(-v[174]*v[220] + v[94])/v[219] + (-v[220]*v[218] + v[188])/v[219] - 3*(-v[220]*v[215] + v[159])/v[219] + 2*(-v[220]*v[214] + v[162])/v[219])/v[219] + (((6*pow(v[219], 2) + 6*v[219] - 3*v[208] - 3*v[221] + 3*v[220] + 2)/v[219] - (2*pow(v[219], 3) + 3*pow(v[219], 2) - 3*v[219]*v[208] - 3*v[219]*v[221] + 3*v[219]*v[220] + 2*v[219] - 3*v[208] + v[202] + 3*v[161] - 3*v[174] - 3*v[221] + 3*v[220] + v[218] - 3*v[215] + 2*v[214])/pow(v[219], 2))*(-v[219]*v[202] + v[193]) + (-3*v[219] - 3)*(-v[208]*v[202] + v[207])/v[219] + (-3*v[219] - 3)*(-v[202]*v[221] + v[145])/v[219] + (3*v[219] + 3)*(-v[202]*v[220] + v[129])/v[219] + (-pow(v[202], 2) + v[196])/v[219] + 3*(-v[202]*v[161] + v[90])/v[219] - 3*(-v[202]*v[174] + v[116])/v[219] + (-v[202]*v[218] + v[140])/v[219] - 3*(-v[202]*v[215] + v[147])/v[219] + 2*(-v[202]*v[214] + v[93])/v[219])/v[219] + 3*(((6*pow(v[219], 2) + 6*v[219] - 3*v[208] - 3*v[221] + 3*v[220] + 2)/v[219] - (2*pow(v[219], 3) + 3*pow(v[219], 2) - 3*v[219]*v[208] - 3*v[219]*v[221] + 3*v[219]*v[220] + 2*v[219] - 3*v[208] + v[202] + 3*v[161] - 3*v[174] - 3*v[221] + 3*v[220] + v[218] - 3*v[215] + 2*v[214])/pow(v[219], 2))*(-v[219]*v[161] + v[137]) + (-3*v[219] - 3)*(-v[208]*v[161] + v[145])/v[219] + (-3*v[219] - 3)*(-v[161]*v[221] + v[107])/v[219] + (3*v[219] + 3)*(-v[161]*v[220] + v[72])/v[219] + 3*(v[81] - pow(v[161], 2))/v[219] - 3*(v[39] - v[161]*v[174])/v[219] + (-v[202]*v[161] + v[90])/v[219] + (-v[161]*v[218] + v[46])/v[219] - 3*(-v[161]*v[215] + v[53])/v[219] + 2*(-v[161]*v[214] + v[43])/v[219])/v[219] - 3*(((6*pow(v[219], 2) + 6*v[219] - 3*v[208] - 3*v[221] + 3*v[220] + 2)/v[219] - (2*pow(v[219], 3) + 3*pow(v[219], 2) - 3*v[219]*v[208] - 3*v[219]*v[221] + 3*v[219]*v[220] + 2*v[219] - 3*v[208] + v[202] + 3*v[161] - 3*v[174] - 3*v[221] + 3*v[220] + v[218] - 3*v[215] + 2*v[214])/pow(v[219], 2))*(-v[219]*v[174] + v[134]) + (-3*v[219] - 3)*(v[72] - v[174]*v[221])/v[219] + (-3*v[219] - 3)*(-v[208]*v[174] + v[129])/v[219] + (3*v[219] + 3)*(-v[174]*v[220] + v[94])/v[219] + 3*(v[39] - v[161]*v[174])/v[219] - 3*(v[86] - pow(v[174], 2))/v[219] + (-v[202]*v[174] + v[116])/v[219] + (-v[174]*v[218] + v[59])/v[219] - 3*(-v[174]*v[215] + v[65])/v[219] + 2*(-v[174]*v[214] + v[64])/v[219])/v[219] + (((6*pow(v[219], 2) + 6*v[219] - 3*v[208] - 3*v[221] + 3*v[220] + 2)/v[219] - (2*pow(v[219], 3) + 3*pow(v[219], 2) - 3*v[219]*v[208] - 3*v[219]*v[221] + 3*v[219]*v[220] + 2*v[219] - 3*v[208] + v[202] + 3*v[161] - 3*v[174] - 3*v[221] + 3*v[220] + v[218] - 3*v[215] + 2*v[214])/pow(v[219], 2))*(-v[219]*v[218] + v[152]) + (-3*v[219] - 3)*(-v[208]*v[218] + v[126])/v[219] + (-3*v[219] - 3)*(-v[221]*v[218] + v[171])/v[219] + (3*v[219] + 3)*(-v[220]*v[218] + v[188])/v[219] + (-pow(v[218], 2) + v[204])/v[219] + (-v[202]*v[218] + v[140])/v[219] + 3*(-v[161]*v[218] + v[46])/v[219] - 3*(-v[174]*v[218] + v[59])/v[219] - 3*(-v[218]*v[215] + v[177])/v[219] + 2*(-v[218]*v[214] + v[157])/v[219])/v[219] - 3*(((6*pow(v[219], 2) + 6*v[219] - 3*v[208] - 3*v[221] + 3*v[220] + 2)/v[219] - (2*pow(v[219], 3) + 3*pow(v[219], 2) - 3*v[219]*v[208] - 3*v[219]*v[221] + 3*v[219]*v[220] + 2*v[219] - 3*v[208] + v[202] + 3*v[161] - 3*v[174] - 3*v[221] + 3*v[220] + v[218] - 3*v[215] + 2*v[214])/pow(v[219], 2))*(-v[219]*v[215] + v[185]) + (-3*v[219] - 3)*(-v[208]*v[215] + v[89])/v[219] + (-3*v[219] - 3)*(-v[221]*v[215] + v[181])/v[219] + (3*v[219] + 3)*(-v[220]*v[215] + v[159])/v[219] - 3*(-pow(v[215], 2) + v[212])/v[219] + (-v[202]*v[215] + v[147])/v[219] + 3*(-v[161]*v[215] + v[53])/v[219] - 3*(-v[174]*v[215] + v[65])/v[219] + (-v[218]*v[215] + v[177])/v[219] + 2*(-v[215]*v[214] + v[179])/v[219])/v[219] + 2*(((6*pow(v[219], 2) + 6*v[219] - 3*v[208] - 3*v[221] + 3*v[220] + 2)/v[219] - (2*pow(v[219], 3) + 3*pow(v[219], 2) - 3*v[219]*v[208] - 3*v[219]*v[221] + 3*v[219]*v[220] + 2*v[219] - 3*v[208] + v[202] + 3*v[161] - 3*v[174] - 3*v[221] + 3*v[220] + v[218] - 3*v[215] + 2*v[214])/pow(v[219], 2))*(-v[219]*v[214] + v[163]) + (-3*v[219] - 3)*(-v[208]*v[214] + v[127])/v[219] + (-3*v[219] - 3)*(-v[221]*v[214] + v[172])/v[219] + (3*v[219] + 3)*(-v[220]*v[214] + v[162])/v[219] + 2*(-pow(v[214], 2) + v[197])/v[219] + (-v[202]*v[214] + v[93])/v[219] + 3*(-v[161]*v[214] + v[43])/v[219] - 3*(-v[174]*v[214] + v[64])/v[219] + (-v[218]*v[214] + v[157])/v[219] - 3*(-v[215]*v[214] + v[179])/v[219])/v[219]) / BinEntries);
			//==== Formula Tag: k41 error
				ek41 = sqrt(fabs(((-24*pow(v[219], 3) - 36*pow(v[219], 2) + 24*v[219]*v[208] + 24*v[219]*v[221] - 24*v[219]*v[220] - 22*v[219] + 18*v[208] - 4*v[202] - 12*v[161] + 12*v[174] + 18*v[221] - 18*v[220] - 4*v[218] + 12*v[215] - 8*v[214] - 6)/v[219] - (-6*pow(v[219], 4) - 12*pow(v[219], 3) + 12*pow(v[219], 2)*v[208] + 12*pow(v[219], 2)*v[221] - 12*pow(v[219], 2)*v[220] - 11*pow(v[219], 2) + 18*v[219]*v[208] - 4*v[219]*v[202] - 12*v[219]*v[161] + 12*v[219]*v[174] + 18*v[219]*v[221] - 18*v[219]*v[220] - 4*v[219]*v[218] + 12*v[219]*v[215] - 8*v[219]*v[214] - 6*v[219] - 3*pow(v[208], 2) - 6*v[208]*v[221] + 6*v[208]*v[220] + 11*v[208] + 6*v[137] - 6*v[134] - 6*v[202] + v[193] - 18*v[161] + 18*v[174] + 4*v[152] - 12*v[185] + 8*v[163] - 3*pow(v[221], 2) + 6*v[221]*v[220] + 11*v[221] + 3*v[210] - 6*v[169] - 3*pow(v[220], 2) - 11*v[220] + 3*v[198] - 6*v[218] + 18*v[215] - 12*v[214] + v[217] - 7*v[216] + 12*v[222] - 6*v[213])/pow(v[219], 2))*((-pow(v[219], 2) + v[208])*((-24*pow(v[219], 3) - 36*pow(v[219], 2) + 24*v[219]*v[208] + 24*v[219]*v[221] - 24*v[219]*v[220] - 22*v[219] + 18*v[208] - 4*v[202] - 12*v[161] + 12*v[174] + 18*v[221] - 18*v[220] - 4*v[218] + 12*v[215] - 8*v[214] - 6)/v[219] - (-6*pow(v[219], 4) - 12*pow(v[219], 3) + 12*pow(v[219], 2)*v[208] + 12*pow(v[219], 2)*v[221] - 12*pow(v[219], 2)*v[220] - 11*pow(v[219], 2) + 18*v[219]*v[208] - 4*v[219]*v[202] - 12*v[219]*v[161] + 12*v[219]*v[174] + 18*v[219]*v[221] - 18*v[219]*v[220] - 4*v[219]*v[218] + 12*v[219]*v[215] - 8*v[219]*v[214] - 6*v[219] - 3*pow(v[208], 2) - 6*v[208]*v[221] + 6*v[208]*v[220] + 11*v[208] + 6*v[137] - 6*v[134] - 6*v[202] + v[193] - 18*v[161] + 18*v[174] + 4*v[152] - 12*v[185] + 8*v[163] - 3*pow(v[221], 2) + 6*v[221]*v[220] + 11*v[221] + 3*v[210] - 6*v[169] - 3*pow(v[220], 2) - 11*v[220] + 3*v[198] - 6*v[218] + 18*v[215] - 12*v[214] + v[217] - 7*v[216] + 12*v[222] - 6*v[213])/pow(v[219], 2)) + (-12*v[219] - 18)*(-v[219]*v[161] + v[137])/v[219] + (-8*v[219] - 12)*(-v[219]*v[214] + v[163])/v[219] + (-4*v[219] - 6)*(-v[219]*v[202] + v[193])/v[219] + (-4*v[219] - 6)*(-v[219]*v[218] + v[152])/v[219] + (12*v[219] + 18)*(-v[219]*v[174] + v[134])/v[219] + (12*v[219] + 18)*(-v[219]*v[215] + v[185])/v[219] + (-v[219]*v[208] + v[202])*(12*pow(v[219], 2) + 18*v[219] - 6*v[208] - 6*v[221] + 6*v[220] + 11)/v[219] + 6*(-v[219]*v[137] + v[145])/v[219] - 6*(-v[219]*v[134] + v[129])/v[219] + (-v[219]*v[193] + v[207])/v[219] + 4*(-v[219]*v[152] + v[126])/v[219] - 12*(-v[219]*v[185] + v[89])/v[219] + 8*(-v[219]*v[163] + v[127])/v[219] + (-v[219]*v[221] + v[161])*(12*pow(v[219], 2) + 18*v[219] - 6*v[208] - 6*v[221] + 6*v[220] + 11)/v[219] + 3*(-v[219]*v[210] + v[107])/v[219] - 6*(-v[219]*v[169] + v[72])/v[219] + (-v[219]*v[220] + v[174])*(-12*pow(v[219], 2) - 18*v[219] + 6*v[208] + 6*v[221] - 6*v[220] - 11)/v[219] + 3*(-v[219]*v[198] + v[94])/v[219] + (-v[219]*v[217] + v[176])/v[219] - 7*(-v[219]*v[216] + v[186])/v[219] + 12*(-v[219]*v[222] + v[187])/v[219] - 6*(-v[219]*v[213] + v[183])/v[219]) + (-12*v[219] - 18)*(((-24*pow(v[219], 3) - 36*pow(v[219], 2) + 24*v[219]*v[208] + 24*v[219]*v[221] - 24*v[219]*v[220] - 22*v[219] + 18*v[208] - 4*v[202] - 12*v[161] + 12*v[174] + 18*v[221] - 18*v[220] - 4*v[218] + 12*v[215] - 8*v[214] - 6)/v[219] - (-6*pow(v[219], 4) - 12*pow(v[219], 3) + 12*pow(v[219], 2)*v[208] + 12*pow(v[219], 2)*v[221] - 12*pow(v[219], 2)*v[220] - 11*pow(v[219], 2) + 18*v[219]*v[208] - 4*v[219]*v[202] - 12*v[219]*v[161] + 12*v[219]*v[174] + 18*v[219]*v[221] - 18*v[219]*v[220] - 4*v[219]*v[218] + 12*v[219]*v[215] - 8*v[219]*v[214] - 6*v[219] - 3*pow(v[208], 2) - 6*v[208]*v[221] + 6*v[208]*v[220] + 11*v[208] + 6*v[137] - 6*v[134] - 6*v[202] + v[193] - 18*v[161] + 18*v[174] + 4*v[152] - 12*v[185] + 8*v[163] - 3*pow(v[221], 2) + 6*v[221]*v[220] + 11*v[221] + 3*v[210] - 6*v[169] - 3*pow(v[220], 2) - 11*v[220] + 3*v[198] - 6*v[218] + 18*v[215] - 12*v[214] + v[217] - 7*v[216] + 12*v[222] - 6*v[213])/pow(v[219], 2))*(-v[219]*v[161] + v[137]) + (-12*v[219] - 18)*(v[81] - pow(v[161], 2))/v[219] + (-8*v[219] - 12)*(-v[161]*v[214] + v[43])/v[219] + (-4*v[219] - 6)*(-v[202]*v[161] + v[90])/v[219] + (-4*v[219] - 6)*(-v[161]*v[218] + v[46])/v[219] + (12*v[219] + 18)*(v[39] - v[161]*v[174])/v[219] + (12*v[219] + 18)*(-v[161]*v[215] + v[53])/v[219] + 4*(v[23] - v[161]*v[152])/v[219] - 12*(v[33] - v[161]*v[185])/v[219] + 8*(v[25] - v[161]*v[163])/v[219] + (-v[208]*v[161] + v[145])*(12*pow(v[219], 2) + 18*v[219] - 6*v[208] - 6*v[221] + 6*v[220] + 11)/v[219] + 6*(-v[137]*v[161] + v[82])/v[219] - 6*(-v[134]*v[161] + v[30])/v[219] + (-v[193]*v[161] + v[120])/v[219] + (-v[161]*v[221] + v[107])*(12*pow(v[219], 2) + 18*v[219] - 6*v[208] - 6*v[221] + 6*v[220] + 11)/v[219] + 3*(-v[161]*v[210] + v[138])/v[219] - 6*(-v[161]*v[169] + v[12])/v[219] + (-v[161]*v[220] + v[72])*(-12*pow(v[219], 2) - 18*v[219] + 6*v[208] + 6*v[221] - 6*v[220] - 11)/v[219] + 3*(-v[161]*v[198] + v[27])/v[219] + (-v[161]*v[217] + v[40])/v[219] - 7*(-v[161]*v[216] + v[74])/v[219] + 12*(-v[161]*v[222] + v[47])/v[219] - 6*(-v[161]*v[213] + v[55])/v[219])/v[219] + (-8*v[219] - 12)*(((-24*pow(v[219], 3) - 36*pow(v[219], 2) + 24*v[219]*v[208] + 24*v[219]*v[221] - 24*v[219]*v[220] - 22*v[219] + 18*v[208] - 4*v[202] - 12*v[161] + 12*v[174] + 18*v[221] - 18*v[220] - 4*v[218] + 12*v[215] - 8*v[214] - 6)/v[219] - (-6*pow(v[219], 4) - 12*pow(v[219], 3) + 12*pow(v[219], 2)*v[208] + 12*pow(v[219], 2)*v[221] - 12*pow(v[219], 2)*v[220] - 11*pow(v[219], 2) + 18*v[219]*v[208] - 4*v[219]*v[202] - 12*v[219]*v[161] + 12*v[219]*v[174] + 18*v[219]*v[221] - 18*v[219]*v[220] - 4*v[219]*v[218] + 12*v[219]*v[215] - 8*v[219]*v[214] - 6*v[219] - 3*pow(v[208], 2) - 6*v[208]*v[221] + 6*v[208]*v[220] + 11*v[208] + 6*v[137] - 6*v[134] - 6*v[202] + v[193] - 18*v[161] + 18*v[174] + 4*v[152] - 12*v[185] + 8*v[163] - 3*pow(v[221], 2) + 6*v[221]*v[220] + 11*v[221] + 3*v[210] - 6*v[169] - 3*pow(v[220], 2) - 11*v[220] + 3*v[198] - 6*v[218] + 18*v[215] - 12*v[214] + v[217] - 7*v[216] + 12*v[222] - 6*v[213])/pow(v[219], 2))*(-v[219]*v[214] + v[163]) + (-12*v[219] - 18)*(-v[161]*v[214] + v[43])/v[219] + (-8*v[219] - 12)*(-pow(v[214], 2) + v[197])/v[219] + (-4*v[219] - 6)*(-v[202]*v[214] + v[93])/v[219] + (-4*v[219] - 6)*(-v[218]*v[214] + v[157])/v[219] + (12*v[219] + 18)*(-v[174]*v[214] + v[64])/v[219] + (12*v[219] + 18)*(-v[215]*v[214] + v[179])/v[219] + (-v[208]*v[214] + v[127])*(12*pow(v[219], 2) + 18*v[219] - 6*v[208] - 6*v[221] + 6*v[220] + 11)/v[219] + 6*(-v[137]*v[214] + v[25])/v[219] - 6*(-v[134]*v[214] + v[38])/v[219] + (-v[193]*v[214] + v[104])/v[219] + 4*(-v[152]*v[214] + v[70])/v[219] - 12*(-v[185]*v[214] + v[44])/v[219] + 8*(-v[163]*v[214] + v[125])/v[219] + (-v[221]*v[214] + v[172])*(12*pow(v[219], 2) + 18*v[219] - 6*v[208] - 6*v[221] + 6*v[220] + 11)/v[219] + 3*(-v[210]*v[214] + v[113])/v[219] - 6*(-v[169]*v[214] + v[42])/v[219] + (-v[220]*v[214] + v[162])*(-12*pow(v[219], 2) - 18*v[219] + 6*v[208] + 6*v[221] - 6*v[220] - 11)/v[219] + 3*(-v[198]*v[214] + v[139])/v[219] + (-v[214]*v[217] + v[175])/v[219] - 7*(-v[214]*v[216] + v[150])/v[219] + 12*(-v[214]*v[222] + v[156])/v[219] - 6*(-v[214]*v[213] + v[148])/v[219])/v[219] + (-4*v[219] - 6)*(((-24*pow(v[219], 3) - 36*pow(v[219], 2) + 24*v[219]*v[208] + 24*v[219]*v[221] - 24*v[219]*v[220] - 22*v[219] + 18*v[208] - 4*v[202] - 12*v[161] + 12*v[174] + 18*v[221] - 18*v[220] - 4*v[218] + 12*v[215] - 8*v[214] - 6)/v[219] - (-6*pow(v[219], 4) - 12*pow(v[219], 3) + 12*pow(v[219], 2)*v[208] + 12*pow(v[219], 2)*v[221] - 12*pow(v[219], 2)*v[220] - 11*pow(v[219], 2) + 18*v[219]*v[208] - 4*v[219]*v[202] - 12*v[219]*v[161] + 12*v[219]*v[174] + 18*v[219]*v[221] - 18*v[219]*v[220] - 4*v[219]*v[218] + 12*v[219]*v[215] - 8*v[219]*v[214] - 6*v[219] - 3*pow(v[208], 2) - 6*v[208]*v[221] + 6*v[208]*v[220] + 11*v[208] + 6*v[137] - 6*v[134] - 6*v[202] + v[193] - 18*v[161] + 18*v[174] + 4*v[152] - 12*v[185] + 8*v[163] - 3*pow(v[221], 2) + 6*v[221]*v[220] + 11*v[221] + 3*v[210] - 6*v[169] - 3*pow(v[220], 2) - 11*v[220] + 3*v[198] - 6*v[218] + 18*v[215] - 12*v[214] + v[217] - 7*v[216] + 12*v[222] - 6*v[213])/pow(v[219], 2))*(-v[219]*v[202] + v[193]) + (-12*v[219] - 18)*(-v[202]*v[161] + v[90])/v[219] + (-8*v[219] - 12)*(-v[202]*v[214] + v[93])/v[219] + (-4*v[219] - 6)*(-pow(v[202], 2) + v[196])/v[219] + (-4*v[219] - 6)*(-v[202]*v[218] + v[140])/v[219] + (12*v[219] + 18)*(-v[202]*v[174] + v[116])/v[219] + (12*v[219] + 18)*(-v[202]*v[215] + v[147])/v[219] + (-v[208]*v[202] + v[207])*(12*pow(v[219], 2) + 18*v[219] - 6*v[208] - 6*v[221] + 6*v[220] + 11)/v[219] + 6*(-v[137]*v[202] + v[120])/v[219] - 6*(-v[134]*v[202] + v[121])/v[219] + (-v[202]*v[193] + v[203])/v[219] + 4*(-v[202]*v[152] + v[109])/v[219] - 12*(-v[202]*v[185] + v[103])/v[219] + 8*(-v[202]*v[163] + v[104])/v[219] + (-v[202]*v[221] + v[145])*(12*pow(v[219], 2) + 18*v[219] - 6*v[208] - 6*v[221] + 6*v[220] + 11)/v[219] + 3*(-v[202]*v[210] + v[82])/v[219] - 6*(-v[202]*v[169] + v[30])/v[219] + (-v[202]*v[220] + v[129])*(-12*pow(v[219], 2) - 18*v[219] + 6*v[208] + 6*v[221] - 6*v[220] - 11)/v[219] + 3*(-v[202]*v[198] + v[87])/v[219] + (-v[202]*v[217] + v[130])/v[219] - 7*(-v[202]*v[216] + v[112])/v[219] + 12*(-v[202]*v[222] + v[96])/v[219] - 6*(-v[202]*v[213] + v[146])/v[219])/v[219] + (-4*v[219] - 6)*(((-24*pow(v[219], 3) - 36*pow(v[219], 2) + 24*v[219]*v[208] + 24*v[219]*v[221] - 24*v[219]*v[220] - 22*v[219] + 18*v[208] - 4*v[202] - 12*v[161] + 12*v[174] + 18*v[221] - 18*v[220] - 4*v[218] + 12*v[215] - 8*v[214] - 6)/v[219] - (-6*pow(v[219], 4) - 12*pow(v[219], 3) + 12*pow(v[219], 2)*v[208] + 12*pow(v[219], 2)*v[221] - 12*pow(v[219], 2)*v[220] - 11*pow(v[219], 2) + 18*v[219]*v[208] - 4*v[219]*v[202] - 12*v[219]*v[161] + 12*v[219]*v[174] + 18*v[219]*v[221] - 18*v[219]*v[220] - 4*v[219]*v[218] + 12*v[219]*v[215] - 8*v[219]*v[214] - 6*v[219] - 3*pow(v[208], 2) - 6*v[208]*v[221] + 6*v[208]*v[220] + 11*v[208] + 6*v[137] - 6*v[134] - 6*v[202] + v[193] - 18*v[161] + 18*v[174] + 4*v[152] - 12*v[185] + 8*v[163] - 3*pow(v[221], 2) + 6*v[221]*v[220] + 11*v[221] + 3*v[210] - 6*v[169] - 3*pow(v[220], 2) - 11*v[220] + 3*v[198] - 6*v[218] + 18*v[215] - 12*v[214] + v[217] - 7*v[216] + 12*v[222] - 6*v[213])/pow(v[219], 2))*(-v[219]*v[218] + v[152]) + (-12*v[219] - 18)*(-v[161]*v[218] + v[46])/v[219] + (-8*v[219] - 12)*(-v[218]*v[214] + v[157])/v[219] + (-4*v[219] - 6)*(-pow(v[218], 2) + v[204])/v[219] + (-4*v[219] - 6)*(-v[202]*v[218] + v[140])/v[219] + (12*v[219] + 18)*(-v[174]*v[218] + v[59])/v[219] + (12*v[219] + 18)*(-v[218]*v[215] + v[177])/v[219] - 12*(v[76] - v[185]*v[218])/v[219] + 8*(v[70] - v[163]*v[218])/v[219] + (-v[208]*v[218] + v[126])*(12*pow(v[219], 2) + 18*v[219] - 6*v[208] - 6*v[221] + 6*v[220] + 11)/v[219] + 6*(-v[137]*v[218] + v[23])/v[219] - 6*(-v[134]*v[218] + v[8])/v[219] + (-v[193]*v[218] + v[109])/v[219] + 4*(-v[152]*v[218] + v[136])/v[219] + (-v[221]*v[218] + v[171])*(12*pow(v[219], 2) + 18*v[219] - 6*v[208] - 6*v[221] + 6*v[220] + 11)/v[219] + 3*(-v[210]*v[218] + v[118])/v[219] - 6*(-v[169]*v[218] + v[63])/v[219] + (-v[220]*v[218] + v[188])*(-12*pow(v[219], 2) - 18*v[219] + 6*v[208] + 6*v[221] - 6*v[220] - 11)/v[219] + 3*(-v[198]*v[218] + v[105])/v[219] + (-v[218]*v[217] + v[168])/v[219] - 7*(-v[218]*v[216] + v[149])/v[219] + 12*(-v[218]*v[222] + v[166])/v[219] - 6*(-v[218]*v[213] + v[170])/v[219])/v[219] + (12*v[219] + 18)*(((-24*pow(v[219], 3) - 36*pow(v[219], 2) + 24*v[219]*v[208] + 24*v[219]*v[221] - 24*v[219]*v[220] - 22*v[219] + 18*v[208] - 4*v[202] - 12*v[161] + 12*v[174] + 18*v[221] - 18*v[220] - 4*v[218] + 12*v[215] - 8*v[214] - 6)/v[219] - (-6*pow(v[219], 4) - 12*pow(v[219], 3) + 12*pow(v[219], 2)*v[208] + 12*pow(v[219], 2)*v[221] - 12*pow(v[219], 2)*v[220] - 11*pow(v[219], 2) + 18*v[219]*v[208] - 4*v[219]*v[202] - 12*v[219]*v[161] + 12*v[219]*v[174] + 18*v[219]*v[221] - 18*v[219]*v[220] - 4*v[219]*v[218] + 12*v[219]*v[215] - 8*v[219]*v[214] - 6*v[219] - 3*pow(v[208], 2) - 6*v[208]*v[221] + 6*v[208]*v[220] + 11*v[208] + 6*v[137] - 6*v[134] - 6*v[202] + v[193] - 18*v[161] + 18*v[174] + 4*v[152] - 12*v[185] + 8*v[163] - 3*pow(v[221], 2) + 6*v[221]*v[220] + 11*v[221] + 3*v[210] - 6*v[169] - 3*pow(v[220], 2) - 11*v[220] + 3*v[198] - 6*v[218] + 18*v[215] - 12*v[214] + v[217] - 7*v[216] + 12*v[222] - 6*v[213])/pow(v[219], 2))*(-v[219]*v[174] + v[134]) + (-12*v[219] - 18)*(v[39] - v[161]*v[174])/v[219] + (-8*v[219] - 12)*(-v[174]*v[214] + v[64])/v[219] + (-4*v[219] - 6)*(-v[202]*v[174] + v[116])/v[219] + (-4*v[219] - 6)*(-v[174]*v[218] + v[59])/v[219] + (12*v[219] + 18)*(v[86] - pow(v[174], 2))/v[219] + (12*v[219] + 18)*(-v[174]*v[215] + v[65])/v[219] + 4*(v[8] - v[174]*v[152])/v[219] - 12*(v[37] - v[174]*v[185])/v[219] + 8*(v[38] - v[174]*v[163])/v[219] + 3*(v[12] - v[174]*v[210])/v[219] + (v[72] - v[174]*v[221])*(12*pow(v[219], 2) + 18*v[219] - 6*v[208] - 6*v[221] + 6*v[220] + 11)/v[219] - 6*(v[27] - v[174]*v[169])/v[219] + (-v[208]*v[174] + v[129])*(12*pow(v[219], 2) + 18*v[219] - 6*v[208] - 6*v[221] + 6*v[220] + 11)/v[219] + 6*(-v[137]*v[174] + v[30])/v[219] - 6*(-v[134]*v[174] + v[87])/v[219] + (-v[193]*v[174] + v[121])/v[219] + (-v[174]*v[220] + v[94])*(-12*pow(v[219], 2) - 18*v[219] + 6*v[208] + 6*v[221] - 6*v[220] - 11)/v[219] + 3*(-v[174]*v[198] + v[100])/v[219] + (-v[174]*v[217] + v[60])/v[219] - 7*(-v[174]*v[216] + v[54])/v[219] + 12*(-v[174]*v[222] + v[67])/v[219] - 6*(-v[174]*v[213] + v[58])/v[219])/v[219] + (12*v[219] + 18)*(((-24*pow(v[219], 3) - 36*pow(v[219], 2) + 24*v[219]*v[208] + 24*v[219]*v[221] - 24*v[219]*v[220] - 22*v[219] + 18*v[208] - 4*v[202] - 12*v[161] + 12*v[174] + 18*v[221] - 18*v[220] - 4*v[218] + 12*v[215] - 8*v[214] - 6)/v[219] - (-6*pow(v[219], 4) - 12*pow(v[219], 3) + 12*pow(v[219], 2)*v[208] + 12*pow(v[219], 2)*v[221] - 12*pow(v[219], 2)*v[220] - 11*pow(v[219], 2) + 18*v[219]*v[208] - 4*v[219]*v[202] - 12*v[219]*v[161] + 12*v[219]*v[174] + 18*v[219]*v[221] - 18*v[219]*v[220] - 4*v[219]*v[218] + 12*v[219]*v[215] - 8*v[219]*v[214] - 6*v[219] - 3*pow(v[208], 2) - 6*v[208]*v[221] + 6*v[208]*v[220] + 11*v[208] + 6*v[137] - 6*v[134] - 6*v[202] + v[193] - 18*v[161] + 18*v[174] + 4*v[152] - 12*v[185] + 8*v[163] - 3*pow(v[221], 2) + 6*v[221]*v[220] + 11*v[221] + 3*v[210] - 6*v[169] - 3*pow(v[220], 2) - 11*v[220] + 3*v[198] - 6*v[218] + 18*v[215] - 12*v[214] + v[217] - 7*v[216] + 12*v[222] - 6*v[213])/pow(v[219], 2))*(-v[219]*v[215] + v[185]) + (-12*v[219] - 18)*(-v[161]*v[215] + v[53])/v[219] + (-8*v[219] - 12)*(-v[215]*v[214] + v[179])/v[219] + (-4*v[219] - 6)*(-v[202]*v[215] + v[147])/v[219] + (-4*v[219] - 6)*(-v[218]*v[215] + v[177])/v[219] + (12*v[219] + 18)*(-pow(v[215], 2) + v[212])/v[219] + (12*v[219] + 18)*(-v[174]*v[215] + v[65])/v[219] + 8*(v[44] - v[163]*v[215])/v[219] + (-v[208]*v[215] + v[89])*(12*pow(v[219], 2) + 18*v[219] - 6*v[208] - 6*v[221] + 6*v[220] + 11)/v[219] + 6*(-v[137]*v[215] + v[33])/v[219] - 6*(-v[134]*v[215] + v[37])/v[219] + (-v[193]*v[215] + v[103])/v[219] + 4*(-v[152]*v[215] + v[76])/v[219] - 12*(-v[185]*v[215] + v[132])/v[219] + (-v[221]*v[215] + v[181])*(12*pow(v[219], 2) + 18*v[219] - 6*v[208] - 6*v[221] + 6*v[220] + 11)/v[219] + 3*(-v[210]*v[215] + v[119])/v[219] - 6*(-v[169]*v[215] + v[69])/v[219] + (-v[220]*v[215] + v[159])*(-12*pow(v[219], 2) - 18*v[219] + 6*v[208] + 6*v[221] - 6*v[220] - 11)/v[219] + 3*(-v[198]*v[215] + v[124])/v[219] + (-v[215]*v[217] + v[184])/v[219] - 7*(-v[215]*v[216] + v[178])/v[219] + 12*(-v[215]*v[222] + v[154])/v[219] - 6*(-v[215]*v[213] + v[190])/v[219])/v[219] + (-12*pow(v[219], 2) - 18*v[219] + 6*v[208] + 6*v[221] - 6*v[220] - 11)*(((-24*pow(v[219], 3) - 36*pow(v[219], 2) + 24*v[219]*v[208] + 24*v[219]*v[221] - 24*v[219]*v[220] - 22*v[219] + 18*v[208] - 4*v[202] - 12*v[161] + 12*v[174] + 18*v[221] - 18*v[220] - 4*v[218] + 12*v[215] - 8*v[214] - 6)/v[219] - (-6*pow(v[219], 4) - 12*pow(v[219], 3) + 12*pow(v[219], 2)*v[208] + 12*pow(v[219], 2)*v[221] - 12*pow(v[219], 2)*v[220] - 11*pow(v[219], 2) + 18*v[219]*v[208] - 4*v[219]*v[202] - 12*v[219]*v[161] + 12*v[219]*v[174] + 18*v[219]*v[221] - 18*v[219]*v[220] - 4*v[219]*v[218] + 12*v[219]*v[215] - 8*v[219]*v[214] - 6*v[219] - 3*pow(v[208], 2) - 6*v[208]*v[221] + 6*v[208]*v[220] + 11*v[208] + 6*v[137] - 6*v[134] - 6*v[202] + v[193] - 18*v[161] + 18*v[174] + 4*v[152] - 12*v[185] + 8*v[163] - 3*pow(v[221], 2) + 6*v[221]*v[220] + 11*v[221] + 3*v[210] - 6*v[169] - 3*pow(v[220], 2) - 11*v[220] + 3*v[198] - 6*v[218] + 18*v[215] - 12*v[214] + v[217] - 7*v[216] + 12*v[222] - 6*v[213])/pow(v[219], 2))*(-v[219]*v[220] + v[174]) + (-12*v[219] - 18)*(-v[161]*v[220] + v[72])/v[219] + (-8*v[219] - 12)*(-v[220]*v[214] + v[162])/v[219] + (-4*v[219] - 6)*(-v[202]*v[220] + v[129])/v[219] + (-4*v[219] - 6)*(-v[220]*v[218] + v[188])/v[219] + (12*v[219] + 18)*(-v[174]*v[220] + v[94])/v[219] + (12*v[219] + 18)*(-v[220]*v[215] + v[159])/v[219] + 4*(v[59] - v[152]*v[220])/v[219] - 12*(v[65] - v[185]*v[220])/v[219] + 8*(v[64] - v[163]*v[220])/v[219] + (-pow(v[220], 2) + v[198])*(-12*pow(v[219], 2) - 18*v[219] + 6*v[208] + 6*v[221] - 6*v[220] - 11)/v[219] + (-v[208]*v[220] + v[134])*(12*pow(v[219], 2) + 18*v[219] - 6*v[208] - 6*v[221] + 6*v[220] + 11)/v[219] + 6*(-v[137]*v[220] + v[39])/v[219] - 6*(-v[134]*v[220] + v[86])/v[219] + (-v[193]*v[220] + v[116])/v[219] + (-v[221]*v[220] + v[169])*(12*pow(v[219], 2) + 18*v[219] - 6*v[208] - 6*v[221] + 6*v[220] + 11)/v[219] + 3*(-v[210]*v[220] + v[97])/v[219] - 6*(-v[169]*v[220] + v[133])/v[219] + 3*(-v[220]*v[198] + v[194])/v[219] + (-v[220]*v[217] + v[153])/v[219] - 7*(-v[220]*v[216] + v[180])/v[219] + 12*(-v[220]*v[222] + v[158])/v[219] - 6*(-v[220]*v[213] + v[189])/v[219])/v[219] + (12*pow(v[219], 2) + 18*v[219] - 6*v[208] - 6*v[221] + 6*v[220] + 11)*(((-24*pow(v[219], 3) - 36*pow(v[219], 2) + 24*v[219]*v[208] + 24*v[219]*v[221] - 24*v[219]*v[220] - 22*v[219] + 18*v[208] - 4*v[202] - 12*v[161] + 12*v[174] + 18*v[221] - 18*v[220] - 4*v[218] + 12*v[215] - 8*v[214] - 6)/v[219] - (-6*pow(v[219], 4) - 12*pow(v[219], 3) + 12*pow(v[219], 2)*v[208] + 12*pow(v[219], 2)*v[221] - 12*pow(v[219], 2)*v[220] - 11*pow(v[219], 2) + 18*v[219]*v[208] - 4*v[219]*v[202] - 12*v[219]*v[161] + 12*v[219]*v[174] + 18*v[219]*v[221] - 18*v[219]*v[220] - 4*v[219]*v[218] + 12*v[219]*v[215] - 8*v[219]*v[214] - 6*v[219] - 3*pow(v[208], 2) - 6*v[208]*v[221] + 6*v[208]*v[220] + 11*v[208] + 6*v[137] - 6*v[134] - 6*v[202] + v[193] - 18*v[161] + 18*v[174] + 4*v[152] - 12*v[185] + 8*v[163] - 3*pow(v[221], 2) + 6*v[221]*v[220] + 11*v[221] + 3*v[210] - 6*v[169] - 3*pow(v[220], 2) - 11*v[220] + 3*v[198] - 6*v[218] + 18*v[215] - 12*v[214] + v[217] - 7*v[216] + 12*v[222] - 6*v[213])/pow(v[219], 2))*(-v[219]*v[208] + v[202]) + (-12*v[219] - 18)*(-v[208]*v[161] + v[145])/v[219] + (-8*v[219] - 12)*(-v[208]*v[214] + v[127])/v[219] + (-4*v[219] - 6)*(-v[208]*v[202] + v[207])/v[219] + (-4*v[219] - 6)*(-v[208]*v[218] + v[126])/v[219] + (12*v[219] + 18)*(-v[208]*v[174] + v[129])/v[219] + (12*v[219] + 18)*(-v[208]*v[215] + v[89])/v[219] + (-pow(v[208], 2) + v[193])*(12*pow(v[219], 2) + 18*v[219] - 6*v[208] - 6*v[221] + 6*v[220] + 11)/v[219] + 6*(-v[208]*v[137] + v[90])/v[219] - 6*(-v[208]*v[134] + v[116])/v[219] + (-v[208]*v[193] + v[196])/v[219] + 4*(-v[208]*v[152] + v[140])/v[219] - 12*(-v[208]*v[185] + v[147])/v[219] + 8*(-v[208]*v[163] + v[93])/v[219] + (-v[208]*v[221] + v[137])*(12*pow(v[219], 2) + 18*v[219] - 6*v[208] - 6*v[221] + 6*v[220] + 11)/v[219] + 3*(-v[208]*v[210] + v[81])/v[219] - 6*(-v[208]*v[169] + v[39])/v[219] + (-v[208]*v[220] + v[134])*(-12*pow(v[219], 2) - 18*v[219] + 6*v[208] + 6*v[221] - 6*v[220] - 11)/v[219] + 3*(-v[208]*v[198] + v[86])/v[219] + (-v[208]*v[217] + v[110])/v[219] - 7*(-v[208]*v[216] + v[106])/v[219] + 12*(-v[208]*v[222] + v[115])/v[219] - 6*(-v[208]*v[213] + v[92])/v[219])/v[219] + (12*pow(v[219], 2) + 18*v[219] - 6*v[208] - 6*v[221] + 6*v[220] + 11)*(((-24*pow(v[219], 3) - 36*pow(v[219], 2) + 24*v[219]*v[208] + 24*v[219]*v[221] - 24*v[219]*v[220] - 22*v[219] + 18*v[208] - 4*v[202] - 12*v[161] + 12*v[174] + 18*v[221] - 18*v[220] - 4*v[218] + 12*v[215] - 8*v[214] - 6)/v[219] - (-6*pow(v[219], 4) - 12*pow(v[219], 3) + 12*pow(v[219], 2)*v[208] + 12*pow(v[219], 2)*v[221] - 12*pow(v[219], 2)*v[220] - 11*pow(v[219], 2) + 18*v[219]*v[208] - 4*v[219]*v[202] - 12*v[219]*v[161] + 12*v[219]*v[174] + 18*v[219]*v[221] - 18*v[219]*v[220] - 4*v[219]*v[218] + 12*v[219]*v[215] - 8*v[219]*v[214] - 6*v[219] - 3*pow(v[208], 2) - 6*v[208]*v[221] + 6*v[208]*v[220] + 11*v[208] + 6*v[137] - 6*v[134] - 6*v[202] + v[193] - 18*v[161] + 18*v[174] + 4*v[152] - 12*v[185] + 8*v[163] - 3*pow(v[221], 2) + 6*v[221]*v[220] + 11*v[221] + 3*v[210] - 6*v[169] - 3*pow(v[220], 2) - 11*v[220] + 3*v[198] - 6*v[218] + 18*v[215] - 12*v[214] + v[217] - 7*v[216] + 12*v[222] - 6*v[213])/pow(v[219], 2))*(-v[219]*v[221] + v[161]) + (-12*v[219] - 18)*(-v[161]*v[221] + v[107])/v[219] + (-8*v[219] - 12)*(-v[221]*v[214] + v[172])/v[219] + (-4*v[219] - 6)*(-v[202]*v[221] + v[145])/v[219] + (-4*v[219] - 6)*(-v[221]*v[218] + v[171])/v[219] + (12*v[219] + 18)*(v[72] - v[174]*v[221])/v[219] + (12*v[219] + 18)*(-v[221]*v[215] + v[181])/v[219] - 6*(v[39] - v[134]*v[221])/v[219] + 4*(v[46] - v[152]*v[221])/v[219] - 12*(v[53] - v[185]*v[221])/v[219] + 8*(v[43] - v[163]*v[221])/v[219] + (-pow(v[221], 2) + v[210])*(12*pow(v[219], 2) + 18*v[219] - 6*v[208] - 6*v[221] + 6*v[220] + 11)/v[219] + (-v[208]*v[221] + v[137])*(12*pow(v[219], 2) + 18*v[219] - 6*v[208] - 6*v[221] + 6*v[220] + 11)/v[219] + 6*(-v[137]*v[221] + v[81])/v[219] + (-v[193]*v[221] + v[90])/v[219] + 3*(-v[221]*v[210] + v[206])/v[219] - 6*(-v[221]*v[169] + v[97])/v[219] + (-v[221]*v[220] + v[169])*(-12*pow(v[219], 2) - 18*v[219] + 6*v[208] + 6*v[221] - 6*v[220] - 11)/v[219] + 3*(-v[221]*v[198] + v[133])/v[219] + (-v[221]*v[217] + v[160])/v[219] - 7*(-v[221]*v[216] + v[167])/v[219] + 12*(-v[221]*v[222] + v[155])/v[219] - 6*(-v[221]*v[213] + v[173])/v[219])/v[219] + 6*(((-24*pow(v[219], 3) - 36*pow(v[219], 2) + 24*v[219]*v[208] + 24*v[219]*v[221] - 24*v[219]*v[220] - 22*v[219] + 18*v[208] - 4*v[202] - 12*v[161] + 12*v[174] + 18*v[221] - 18*v[220] - 4*v[218] + 12*v[215] - 8*v[214] - 6)/v[219] - (-6*pow(v[219], 4) - 12*pow(v[219], 3) + 12*pow(v[219], 2)*v[208] + 12*pow(v[219], 2)*v[221] - 12*pow(v[219], 2)*v[220] - 11*pow(v[219], 2) + 18*v[219]*v[208] - 4*v[219]*v[202] - 12*v[219]*v[161] + 12*v[219]*v[174] + 18*v[219]*v[221] - 18*v[219]*v[220] - 4*v[219]*v[218] + 12*v[219]*v[215] - 8*v[219]*v[214] - 6*v[219] - 3*pow(v[208], 2) - 6*v[208]*v[221] + 6*v[208]*v[220] + 11*v[208] + 6*v[137] - 6*v[134] - 6*v[202] + v[193] - 18*v[161] + 18*v[174] + 4*v[152] - 12*v[185] + 8*v[163] - 3*pow(v[221], 2) + 6*v[221]*v[220] + 11*v[221] + 3*v[210] - 6*v[169] - 3*pow(v[220], 2) - 11*v[220] + 3*v[198] - 6*v[218] + 18*v[215] - 12*v[214] + v[217] - 7*v[216] + 12*v[222] - 6*v[213])/pow(v[219], 2))*(-v[219]*v[137] + v[145]) + (-12*v[219] - 18)*(-v[137]*v[161] + v[82])/v[219] + (-8*v[219] - 12)*(-v[137]*v[214] + v[25])/v[219] + (-4*v[219] - 6)*(-v[137]*v[202] + v[120])/v[219] + (-4*v[219] - 6)*(-v[137]*v[218] + v[23])/v[219] + (12*v[219] + 18)*(-v[137]*v[174] + v[30])/v[219] + (12*v[219] + 18)*(-v[137]*v[215] + v[33])/v[219] + 6*(-pow(v[137], 2) + v[83])/v[219] + (-v[208]*v[137] + v[90])*(12*pow(v[219], 2) + 18*v[219] - 6*v[208] - 6*v[221] + 6*v[220] + 11)/v[219] - 6*(-v[137]*v[134] + v[24])/v[219] + (-v[137]*v[193] + v[102])/v[219] + 4*(-v[137]*v[152] + v[28])/v[219] - 12*(-v[137]*v[185] + v[16])/v[219] + 8*(-v[137]*v[163] + v[19])/v[219] + (-v[137]*v[221] + v[81])*(12*pow(v[219], 2) + 18*v[219] - 6*v[208] - 6*v[221] + 6*v[220] + 11)/v[219] + 3*(-v[137]*v[210] + v[85])/v[219] - 6*(-v[137]*v[169] + v[4])/v[219] + (-v[137]*v[220] + v[39])*(-12*pow(v[219], 2) - 18*v[219] + 6*v[208] + 6*v[221] - 6*v[220] - 11)/v[219] + 3*(-v[137]*v[198] + v[5])/v[219] + (-v[137]*v[217] + v[34])/v[219] - 7*(-v[137]*v[216] + v[10])/v[219] + 12*(-v[137]*v[222] + v[9])/v[219] - 6*(-v[137]*v[213] + v[15])/v[219])/v[219] - 6*(((-24*pow(v[219], 3) - 36*pow(v[219], 2) + 24*v[219]*v[208] + 24*v[219]*v[221] - 24*v[219]*v[220] - 22*v[219] + 18*v[208] - 4*v[202] - 12*v[161] + 12*v[174] + 18*v[221] - 18*v[220] - 4*v[218] + 12*v[215] - 8*v[214] - 6)/v[219] - (-6*pow(v[219], 4) - 12*pow(v[219], 3) + 12*pow(v[219], 2)*v[208] + 12*pow(v[219], 2)*v[221] - 12*pow(v[219], 2)*v[220] - 11*pow(v[219], 2) + 18*v[219]*v[208] - 4*v[219]*v[202] - 12*v[219]*v[161] + 12*v[219]*v[174] + 18*v[219]*v[221] - 18*v[219]*v[220] - 4*v[219]*v[218] + 12*v[219]*v[215] - 8*v[219]*v[214] - 6*v[219] - 3*pow(v[208], 2) - 6*v[208]*v[221] + 6*v[208]*v[220] + 11*v[208] + 6*v[137] - 6*v[134] - 6*v[202] + v[193] - 18*v[161] + 18*v[174] + 4*v[152] - 12*v[185] + 8*v[163] - 3*pow(v[221], 2) + 6*v[221]*v[220] + 11*v[221] + 3*v[210] - 6*v[169] - 3*pow(v[220], 2) - 11*v[220] + 3*v[198] - 6*v[218] + 18*v[215] - 12*v[214] + v[217] - 7*v[216] + 12*v[222] - 6*v[213])/pow(v[219], 2))*(-v[219]*v[134] + v[129]) + (-12*v[219] - 18)*(-v[134]*v[161] + v[30])/v[219] + (-8*v[219] - 12)*(-v[134]*v[214] + v[38])/v[219] + (-4*v[219] - 6)*(-v[134]*v[202] + v[121])/v[219] + (-4*v[219] - 6)*(-v[134]*v[218] + v[8])/v[219] + (12*v[219] + 18)*(-v[134]*v[174] + v[87])/v[219] + (12*v[219] + 18)*(-v[134]*v[215] + v[37])/v[219] + 3*(v[4] - v[134]*v[210])/v[219] + (v[39] - v[134]*v[221])*(12*pow(v[219], 2) + 18*v[219] - 6*v[208] - 6*v[221] + 6*v[220] + 11)/v[219] - 6*(v[5] - v[134]*v[169])/v[219] - 6*(-pow(v[134], 2) + v[79])/v[219] + (-v[208]*v[134] + v[116])*(12*pow(v[219], 2) + 18*v[219] - 6*v[208] - 6*v[221] + 6*v[220] + 11)/v[219] + 6*(-v[137]*v[134] + v[24])/v[219] + (-v[134]*v[193] + v[101])/v[219] + 4*(-v[134]*v[152] + v[18])/v[219] - 12*(-v[134]*v[185] + v[29])/v[219] + 8*(-v[134]*v[163] + v[26])/v[219] + (-v[134]*v[220] + v[86])*(-12*pow(v[219], 2) - 18*v[219] + 6*v[208] + 6*v[221] - 6*v[220] - 11)/v[219] + 3*(-v[134]*v[198] + v[88])/v[219] + (-v[134]*v[217] + v[20])/v[219] - 7*(-v[134]*v[216] + v[32])/v[219] + 12*(-v[134]*v[222] + v[35])/v[219] - 6*(-v[134]*v[213] + v[21])/v[219])/v[219] + (((-24*pow(v[219], 3) - 36*pow(v[219], 2) + 24*v[219]*v[208] + 24*v[219]*v[221] - 24*v[219]*v[220] - 22*v[219] + 18*v[208] - 4*v[202] - 12*v[161] + 12*v[174] + 18*v[221] - 18*v[220] - 4*v[218] + 12*v[215] - 8*v[214] - 6)/v[219] - (-6*pow(v[219], 4) - 12*pow(v[219], 3) + 12*pow(v[219], 2)*v[208] + 12*pow(v[219], 2)*v[221] - 12*pow(v[219], 2)*v[220] - 11*pow(v[219], 2) + 18*v[219]*v[208] - 4*v[219]*v[202] - 12*v[219]*v[161] + 12*v[219]*v[174] + 18*v[219]*v[221] - 18*v[219]*v[220] - 4*v[219]*v[218] + 12*v[219]*v[215] - 8*v[219]*v[214] - 6*v[219] - 3*pow(v[208], 2) - 6*v[208]*v[221] + 6*v[208]*v[220] + 11*v[208] + 6*v[137] - 6*v[134] - 6*v[202] + v[193] - 18*v[161] + 18*v[174] + 4*v[152] - 12*v[185] + 8*v[163] - 3*pow(v[221], 2) + 6*v[221]*v[220] + 11*v[221] + 3*v[210] - 6*v[169] - 3*pow(v[220], 2) - 11*v[220] + 3*v[198] - 6*v[218] + 18*v[215] - 12*v[214] + v[217] - 7*v[216] + 12*v[222] - 6*v[213])/pow(v[219], 2))*(-v[219]*v[193] + v[207]) + (-12*v[219] - 18)*(-v[193]*v[161] + v[120])/v[219] + (-8*v[219] - 12)*(-v[193]*v[214] + v[104])/v[219] + (-4*v[219] - 6)*(-v[202]*v[193] + v[203])/v[219] + (-4*v[219] - 6)*(-v[193]*v[218] + v[109])/v[219] + (12*v[219] + 18)*(-v[193]*v[174] + v[121])/v[219] + (12*v[219] + 18)*(-v[193]*v[215] + v[103])/v[219] + (-pow(v[193], 2) + v[195])/v[219] + (-v[208]*v[193] + v[196])*(12*pow(v[219], 2) + 18*v[219] - 6*v[208] - 6*v[221] + 6*v[220] + 11)/v[219] + 6*(-v[137]*v[193] + v[102])/v[219] - 6*(-v[134]*v[193] + v[101])/v[219] + 4*(-v[193]*v[152] + v[142])/v[219] - 12*(-v[193]*v[185] + v[114])/v[219] + 8*(-v[193]*v[163] + v[135])/v[219] + (-v[193]*v[221] + v[90])*(12*pow(v[219], 2) + 18*v[219] - 6*v[208] - 6*v[221] + 6*v[220] + 11)/v[219] + 3*(-v[193]*v[210] + v[83])/v[219] - 6*(-v[193]*v[169] + v[24])/v[219] + (-v[193]*v[220] + v[116])*(-12*pow(v[219], 2) - 18*v[219] + 6*v[208] + 6*v[221] - 6*v[220] - 11)/v[219] + 3*(-v[193]*v[198] + v[79])/v[219] + (-v[193]*v[217] + v[141])/v[219] - 7*(-v[193]*v[216] + v[108])/v[219] + 12*(-v[193]*v[222] + v[91])/v[219] - 6*(-v[193]*v[213] + v[98])/v[219])/v[219] + 4*(((-24*pow(v[219], 3) - 36*pow(v[219], 2) + 24*v[219]*v[208] + 24*v[219]*v[221] - 24*v[219]*v[220] - 22*v[219] + 18*v[208] - 4*v[202] - 12*v[161] + 12*v[174] + 18*v[221] - 18*v[220] - 4*v[218] + 12*v[215] - 8*v[214] - 6)/v[219] - (-6*pow(v[219], 4) - 12*pow(v[219], 3) + 12*pow(v[219], 2)*v[208] + 12*pow(v[219], 2)*v[221] - 12*pow(v[219], 2)*v[220] - 11*pow(v[219], 2) + 18*v[219]*v[208] - 4*v[219]*v[202] - 12*v[219]*v[161] + 12*v[219]*v[174] + 18*v[219]*v[221] - 18*v[219]*v[220] - 4*v[219]*v[218] + 12*v[219]*v[215] - 8*v[219]*v[214] - 6*v[219] - 3*pow(v[208], 2) - 6*v[208]*v[221] + 6*v[208]*v[220] + 11*v[208] + 6*v[137] - 6*v[134] - 6*v[202] + v[193] - 18*v[161] + 18*v[174] + 4*v[152] - 12*v[185] + 8*v[163] - 3*pow(v[221], 2) + 6*v[221]*v[220] + 11*v[221] + 3*v[210] - 6*v[169] - 3*pow(v[220], 2) - 11*v[220] + 3*v[198] - 6*v[218] + 18*v[215] - 12*v[214] + v[217] - 7*v[216] + 12*v[222] - 6*v[213])/pow(v[219], 2))*(-v[219]*v[152] + v[126]) + (-12*v[219] - 18)*(v[23] - v[161]*v[152])/v[219] + (-8*v[219] - 12)*(-v[152]*v[214] + v[70])/v[219] + (-4*v[219] - 6)*(-v[202]*v[152] + v[109])/v[219] + (-4*v[219] - 6)*(-v[152]*v[218] + v[136])/v[219] + (12*v[219] + 18)*(v[8] - v[174]*v[152])/v[219] + (12*v[219] + 18)*(-v[152]*v[215] + v[76])/v[219] + 4*(v[80] - pow(v[152], 2))/v[219] - 12*(v[13] - v[152]*v[185])/v[219] + 8*(v[31] - v[152]*v[163])/v[219] + 3*(v[22] - v[152]*v[210])/v[219] - 6*(v[2] - v[152]*v[169])/v[219] + (v[46] - v[152]*v[221])*(12*pow(v[219], 2) + 18*v[219] - 6*v[208] - 6*v[221] + 6*v[220] + 11)/v[219] + 3*(v[17] - v[152]*v[198])/v[219] + (v[59] - v[152]*v[220])*(-12*pow(v[219], 2) - 18*v[219] + 6*v[208] + 6*v[221] - 6*v[220] - 11)/v[219] + (-v[208]*v[152] + v[140])*(12*pow(v[219], 2) + 18*v[219] - 6*v[208] - 6*v[221] + 6*v[220] + 11)/v[219] + 6*(-v[137]*v[152] + v[28])/v[219] - 6*(-v[134]*v[152] + v[18])/v[219] + (-v[193]*v[152] + v[142])/v[219] + (-v[152]*v[217] + v[50])/v[219] - 7*(-v[152]*v[216] + v[57])/v[219] + 12*(-v[152]*v[222] + v[75])/v[219] - 6*(-v[152]*v[213] + v[61])/v[219])/v[219] - 12*(((-24*pow(v[219], 3) - 36*pow(v[219], 2) + 24*v[219]*v[208] + 24*v[219]*v[221] - 24*v[219]*v[220] - 22*v[219] + 18*v[208] - 4*v[202] - 12*v[161] + 12*v[174] + 18*v[221] - 18*v[220] - 4*v[218] + 12*v[215] - 8*v[214] - 6)/v[219] - (-6*pow(v[219], 4) - 12*pow(v[219], 3) + 12*pow(v[219], 2)*v[208] + 12*pow(v[219], 2)*v[221] - 12*pow(v[219], 2)*v[220] - 11*pow(v[219], 2) + 18*v[219]*v[208] - 4*v[219]*v[202] - 12*v[219]*v[161] + 12*v[219]*v[174] + 18*v[219]*v[221] - 18*v[219]*v[220] - 4*v[219]*v[218] + 12*v[219]*v[215] - 8*v[219]*v[214] - 6*v[219] - 3*pow(v[208], 2) - 6*v[208]*v[221] + 6*v[208]*v[220] + 11*v[208] + 6*v[137] - 6*v[134] - 6*v[202] + v[193] - 18*v[161] + 18*v[174] + 4*v[152] - 12*v[185] + 8*v[163] - 3*pow(v[221], 2) + 6*v[221]*v[220] + 11*v[221] + 3*v[210] - 6*v[169] - 3*pow(v[220], 2) - 11*v[220] + 3*v[198] - 6*v[218] + 18*v[215] - 12*v[214] + v[217] - 7*v[216] + 12*v[222] - 6*v[213])/pow(v[219], 2))*(-v[219]*v[185] + v[89]) + (-12*v[219] - 18)*(v[33] - v[161]*v[185])/v[219] + (-8*v[219] - 12)*(-v[185]*v[214] + v[44])/v[219] + (-4*v[219] - 6)*(v[76] - v[185]*v[218])/v[219] + (-4*v[219] - 6)*(-v[202]*v[185] + v[103])/v[219] + (12*v[219] + 18)*(v[37] - v[174]*v[185])/v[219] + (12*v[219] + 18)*(-v[185]*v[215] + v[132])/v[219] + 4*(v[13] - v[152]*v[185])/v[219] - 12*(v[77] - pow(v[185], 2))/v[219] + 8*(v[11] - v[185]*v[163])/v[219] + 3*(v[14] - v[185]*v[210])/v[219] - 6*(v[1] - v[185]*v[169])/v[219] + (v[53] - v[185]*v[221])*(12*pow(v[219], 2) + 18*v[219] - 6*v[208] - 6*v[221] + 6*v[220] + 11)/v[219] + 3*(v[36] - v[185]*v[198])/v[219] + (v[65] - v[185]*v[220])*(-12*pow(v[219], 2) - 18*v[219] + 6*v[208] + 6*v[221] - 6*v[220] - 11)/v[219] + (-v[208]*v[185] + v[147])*(12*pow(v[219], 2) + 18*v[219] - 6*v[208] - 6*v[221] + 6*v[220] + 11)/v[219] + 6*(-v[137]*v[185] + v[16])/v[219] - 6*(-v[134]*v[185] + v[29])/v[219] + (-v[193]*v[185] + v[114])/v[219] + (-v[185]*v[217] + v[48])/v[219] - 7*(-v[185]*v[216] + v[56])/v[219] + 12*(-v[185]*v[222] + v[71])/v[219] - 6*(-v[185]*v[213] + v[68])/v[219])/v[219] + 8*(((-24*pow(v[219], 3) - 36*pow(v[219], 2) + 24*v[219]*v[208] + 24*v[219]*v[221] - 24*v[219]*v[220] - 22*v[219] + 18*v[208] - 4*v[202] - 12*v[161] + 12*v[174] + 18*v[221] - 18*v[220] - 4*v[218] + 12*v[215] - 8*v[214] - 6)/v[219] - (-6*pow(v[219], 4) - 12*pow(v[219], 3) + 12*pow(v[219], 2)*v[208] + 12*pow(v[219], 2)*v[221] - 12*pow(v[219], 2)*v[220] - 11*pow(v[219], 2) + 18*v[219]*v[208] - 4*v[219]*v[202] - 12*v[219]*v[161] + 12*v[219]*v[174] + 18*v[219]*v[221] - 18*v[219]*v[220] - 4*v[219]*v[218] + 12*v[219]*v[215] - 8*v[219]*v[214] - 6*v[219] - 3*pow(v[208], 2) - 6*v[208]*v[221] + 6*v[208]*v[220] + 11*v[208] + 6*v[137] - 6*v[134] - 6*v[202] + v[193] - 18*v[161] + 18*v[174] + 4*v[152] - 12*v[185] + 8*v[163] - 3*pow(v[221], 2) + 6*v[221]*v[220] + 11*v[221] + 3*v[210] - 6*v[169] - 3*pow(v[220], 2) - 11*v[220] + 3*v[198] - 6*v[218] + 18*v[215] - 12*v[214] + v[217] - 7*v[216] + 12*v[222] - 6*v[213])/pow(v[219], 2))*(-v[219]*v[163] + v[127]) + (-12*v[219] - 18)*(v[25] - v[161]*v[163])/v[219] + (-8*v[219] - 12)*(-v[163]*v[214] + v[125])/v[219] + (-4*v[219] - 6)*(v[70] - v[163]*v[218])/v[219] + (-4*v[219] - 6)*(-v[202]*v[163] + v[104])/v[219] + (12*v[219] + 18)*(v[38] - v[174]*v[163])/v[219] + (12*v[219] + 18)*(v[44] - v[163]*v[215])/v[219] + 4*(v[31] - v[152]*v[163])/v[219] - 12*(v[11] - v[185]*v[163])/v[219] + 8*(v[78] - pow(v[163], 2))/v[219] + 3*(v[6] - v[163]*v[210])/v[219] - 6*(v[3] - v[163]*v[169])/v[219] + (v[43] - v[163]*v[221])*(12*pow(v[219], 2) + 18*v[219] - 6*v[208] - 6*v[221] + 6*v[220] + 11)/v[219] + 3*(v[7] - v[163]*v[198])/v[219] + (v[64] - v[163]*v[220])*(-12*pow(v[219], 2) - 18*v[219] + 6*v[208] + 6*v[221] - 6*v[220] - 11)/v[219] + (-v[208]*v[163] + v[93])*(12*pow(v[219], 2) + 18*v[219] - 6*v[208] - 6*v[221] + 6*v[220] + 11)/v[219] + 6*(-v[137]*v[163] + v[19])/v[219] - 6*(-v[134]*v[163] + v[26])/v[219] + (-v[193]*v[163] + v[135])/v[219] + (-v[163]*v[217] + v[51])/v[219] - 7*(-v[163]*v[216] + v[62])/v[219] + 12*(-v[163]*v[222] + v[66])/v[219] - 6*(-v[163]*v[213] + v[73])/v[219])/v[219] + 3*(((-24*pow(v[219], 3) - 36*pow(v[219], 2) + 24*v[219]*v[208] + 24*v[219]*v[221] - 24*v[219]*v[220] - 22*v[219] + 18*v[208] - 4*v[202] - 12*v[161] + 12*v[174] + 18*v[221] - 18*v[220] - 4*v[218] + 12*v[215] - 8*v[214] - 6)/v[219] - (-6*pow(v[219], 4) - 12*pow(v[219], 3) + 12*pow(v[219], 2)*v[208] + 12*pow(v[219], 2)*v[221] - 12*pow(v[219], 2)*v[220] - 11*pow(v[219], 2) + 18*v[219]*v[208] - 4*v[219]*v[202] - 12*v[219]*v[161] + 12*v[219]*v[174] + 18*v[219]*v[221] - 18*v[219]*v[220] - 4*v[219]*v[218] + 12*v[219]*v[215] - 8*v[219]*v[214] - 6*v[219] - 3*pow(v[208], 2) - 6*v[208]*v[221] + 6*v[208]*v[220] + 11*v[208] + 6*v[137] - 6*v[134] - 6*v[202] + v[193] - 18*v[161] + 18*v[174] + 4*v[152] - 12*v[185] + 8*v[163] - 3*pow(v[221], 2) + 6*v[221]*v[220] + 11*v[221] + 3*v[210] - 6*v[169] - 3*pow(v[220], 2) - 11*v[220] + 3*v[198] - 6*v[218] + 18*v[215] - 12*v[214] + v[217] - 7*v[216] + 12*v[222] - 6*v[213])/pow(v[219], 2))*(-v[219]*v[210] + v[107]) + (-12*v[219] - 18)*(-v[161]*v[210] + v[138])/v[219] + (-8*v[219] - 12)*(-v[210]*v[214] + v[113])/v[219] + (-4*v[219] - 6)*(-v[202]*v[210] + v[82])/v[219] + (-4*v[219] - 6)*(-v[210]*v[218] + v[118])/v[219] + (12*v[219] + 18)*(v[12] - v[174]*v[210])/v[219] + (12*v[219] + 18)*(-v[210]*v[215] + v[119])/v[219] - 6*(v[4] - v[134]*v[210])/v[219] + 4*(v[22] - v[152]*v[210])/v[219] - 12*(v[14] - v[185]*v[210])/v[219] + 8*(v[6] - v[163]*v[210])/v[219] + 3*(-pow(v[210], 2) + v[199])/v[219] + (-v[208]*v[210] + v[81])*(12*pow(v[219], 2) + 18*v[219] - 6*v[208] - 6*v[221] + 6*v[220] + 11)/v[219] + 6*(-v[137]*v[210] + v[85])/v[219] + (-v[193]*v[210] + v[83])/v[219] + (-v[221]*v[210] + v[206])*(12*pow(v[219], 2) + 18*v[219] - 6*v[208] - 6*v[221] + 6*v[220] + 11)/v[219] - 6*(-v[210]*v[169] + v[99])/v[219] + (-v[210]*v[220] + v[97])*(-12*pow(v[219], 2) - 18*v[219] + 6*v[208] + 6*v[221] - 6*v[220] - 11)/v[219] + 3*(-v[210]*v[198] + v[84])/v[219] + (-v[210]*v[217] + v[143])/v[219] - 7*(-v[210]*v[216] + v[117])/v[219] + 12*(-v[210]*v[222] + v[128])/v[219] - 6*(-v[210]*v[213] + v[131])/v[219])/v[219] - 6*(((-24*pow(v[219], 3) - 36*pow(v[219], 2) + 24*v[219]*v[208] + 24*v[219]*v[221] - 24*v[219]*v[220] - 22*v[219] + 18*v[208] - 4*v[202] - 12*v[161] + 12*v[174] + 18*v[221] - 18*v[220] - 4*v[218] + 12*v[215] - 8*v[214] - 6)/v[219] - (-6*pow(v[219], 4) - 12*pow(v[219], 3) + 12*pow(v[219], 2)*v[208] + 12*pow(v[219], 2)*v[221] - 12*pow(v[219], 2)*v[220] - 11*pow(v[219], 2) + 18*v[219]*v[208] - 4*v[219]*v[202] - 12*v[219]*v[161] + 12*v[219]*v[174] + 18*v[219]*v[221] - 18*v[219]*v[220] - 4*v[219]*v[218] + 12*v[219]*v[215] - 8*v[219]*v[214] - 6*v[219] - 3*pow(v[208], 2) - 6*v[208]*v[221] + 6*v[208]*v[220] + 11*v[208] + 6*v[137] - 6*v[134] - 6*v[202] + v[193] - 18*v[161] + 18*v[174] + 4*v[152] - 12*v[185] + 8*v[163] - 3*pow(v[221], 2) + 6*v[221]*v[220] + 11*v[221] + 3*v[210] - 6*v[169] - 3*pow(v[220], 2) - 11*v[220] + 3*v[198] - 6*v[218] + 18*v[215] - 12*v[214] + v[217] - 7*v[216] + 12*v[222] - 6*v[213])/pow(v[219], 2))*(-v[219]*v[169] + v[72]) + (-12*v[219] - 18)*(-v[161]*v[169] + v[12])/v[219] + (-8*v[219] - 12)*(-v[169]*v[214] + v[42])/v[219] + (-4*v[219] - 6)*(-v[202]*v[169] + v[30])/v[219] + (-4*v[219] - 6)*(-v[169]*v[218] + v[63])/v[219] + (12*v[219] + 18)*(v[27] - v[174]*v[169])/v[219] + (12*v[219] + 18)*(-v[169]*v[215] + v[69])/v[219] - 6*(v[5] - v[134]*v[169])/v[219] + 4*(v[2] - v[152]*v[169])/v[219] - 12*(v[1] - v[185]*v[169])/v[219] + 8*(v[3] - v[163]*v[169])/v[219] - 6*(v[84] - pow(v[169], 2))/v[219] + (-v[208]*v[169] + v[39])*(12*pow(v[219], 2) + 18*v[219] - 6*v[208] - 6*v[221] + 6*v[220] + 11)/v[219] + 6*(-v[137]*v[169] + v[4])/v[219] + (-v[193]*v[169] + v[24])/v[219] + (-v[221]*v[169] + v[97])*(12*pow(v[219], 2) + 18*v[219] - 6*v[208] - 6*v[221] + 6*v[220] + 11)/v[219] + 3*(-v[210]*v[169] + v[99])/v[219] + (-v[169]*v[220] + v[133])*(-12*pow(v[219], 2) - 18*v[219] + 6*v[208] + 6*v[221] - 6*v[220] - 11)/v[219] + 3*(-v[169]*v[198] + v[122])/v[219] + (-v[169]*v[217] + v[52])/v[219] - 7*(-v[169]*v[216] + v[41])/v[219] + 12*(-v[169]*v[222] + v[45])/v[219] - 6*(-v[169]*v[213] + v[49])/v[219])/v[219] + 3*(((-24*pow(v[219], 3) - 36*pow(v[219], 2) + 24*v[219]*v[208] + 24*v[219]*v[221] - 24*v[219]*v[220] - 22*v[219] + 18*v[208] - 4*v[202] - 12*v[161] + 12*v[174] + 18*v[221] - 18*v[220] - 4*v[218] + 12*v[215] - 8*v[214] - 6)/v[219] - (-6*pow(v[219], 4) - 12*pow(v[219], 3) + 12*pow(v[219], 2)*v[208] + 12*pow(v[219], 2)*v[221] - 12*pow(v[219], 2)*v[220] - 11*pow(v[219], 2) + 18*v[219]*v[208] - 4*v[219]*v[202] - 12*v[219]*v[161] + 12*v[219]*v[174] + 18*v[219]*v[221] - 18*v[219]*v[220] - 4*v[219]*v[218] + 12*v[219]*v[215] - 8*v[219]*v[214] - 6*v[219] - 3*pow(v[208], 2) - 6*v[208]*v[221] + 6*v[208]*v[220] + 11*v[208] + 6*v[137] - 6*v[134] - 6*v[202] + v[193] - 18*v[161] + 18*v[174] + 4*v[152] - 12*v[185] + 8*v[163] - 3*pow(v[221], 2) + 6*v[221]*v[220] + 11*v[221] + 3*v[210] - 6*v[169] - 3*pow(v[220], 2) - 11*v[220] + 3*v[198] - 6*v[218] + 18*v[215] - 12*v[214] + v[217] - 7*v[216] + 12*v[222] - 6*v[213])/pow(v[219], 2))*(-v[219]*v[198] + v[94]) + (-12*v[219] - 18)*(-v[161]*v[198] + v[27])/v[219] + (-8*v[219] - 12)*(-v[198]*v[214] + v[139])/v[219] + (-4*v[219] - 6)*(-v[202]*v[198] + v[87])/v[219] + (-4*v[219] - 6)*(-v[198]*v[218] + v[105])/v[219] + (12*v[219] + 18)*(-v[174]*v[198] + v[100])/v[219] + (12*v[219] + 18)*(-v[198]*v[215] + v[124])/v[219] + 4*(v[17] - v[152]*v[198])/v[219] - 12*(v[36] - v[185]*v[198])/v[219] + 8*(v[7] - v[163]*v[198])/v[219] + 3*(-pow(v[198], 2) + v[205])/v[219] + (-v[208]*v[198] + v[86])*(12*pow(v[219], 2) + 18*v[219] - 6*v[208] - 6*v[221] + 6*v[220] + 11)/v[219] + 6*(-v[137]*v[198] + v[5])/v[219] - 6*(-v[134]*v[198] + v[88])/v[219] + (-v[193]*v[198] + v[79])/v[219] + (-v[221]*v[198] + v[133])*(12*pow(v[219], 2) + 18*v[219] - 6*v[208] - 6*v[221] + 6*v[220] + 11)/v[219] + 3*(-v[210]*v[198] + v[84])/v[219] - 6*(-v[169]*v[198] + v[122])/v[219] + (-v[220]*v[198] + v[194])*(-12*pow(v[219], 2) - 18*v[219] + 6*v[208] + 6*v[221] - 6*v[220] - 11)/v[219] + (-v[198]*v[217] + v[144])/v[219] - 7*(-v[198]*v[216] + v[123])/v[219] + 12*(-v[198]*v[222] + v[111])/v[219] - 6*(-v[198]*v[213] + v[95])/v[219])/v[219] + (((-24*pow(v[219], 3) - 36*pow(v[219], 2) + 24*v[219]*v[208] + 24*v[219]*v[221] - 24*v[219]*v[220] - 22*v[219] + 18*v[208] - 4*v[202] - 12*v[161] + 12*v[174] + 18*v[221] - 18*v[220] - 4*v[218] + 12*v[215] - 8*v[214] - 6)/v[219] - (-6*pow(v[219], 4) - 12*pow(v[219], 3) + 12*pow(v[219], 2)*v[208] + 12*pow(v[219], 2)*v[221] - 12*pow(v[219], 2)*v[220] - 11*pow(v[219], 2) + 18*v[219]*v[208] - 4*v[219]*v[202] - 12*v[219]*v[161] + 12*v[219]*v[174] + 18*v[219]*v[221] - 18*v[219]*v[220] - 4*v[219]*v[218] + 12*v[219]*v[215] - 8*v[219]*v[214] - 6*v[219] - 3*pow(v[208], 2) - 6*v[208]*v[221] + 6*v[208]*v[220] + 11*v[208] + 6*v[137] - 6*v[134] - 6*v[202] + v[193] - 18*v[161] + 18*v[174] + 4*v[152] - 12*v[185] + 8*v[163] - 3*pow(v[221], 2) + 6*v[221]*v[220] + 11*v[221] + 3*v[210] - 6*v[169] - 3*pow(v[220], 2) - 11*v[220] + 3*v[198] - 6*v[218] + 18*v[215] - 12*v[214] + v[217] - 7*v[216] + 12*v[222] - 6*v[213])/pow(v[219], 2))*(-v[219]*v[217] + v[176]) + (-12*v[219] - 18)*(-v[161]*v[217] + v[40])/v[219] + (-8*v[219] - 12)*(-v[214]*v[217] + v[175])/v[219] + (-4*v[219] - 6)*(-v[202]*v[217] + v[130])/v[219] + (-4*v[219] - 6)*(-v[218]*v[217] + v[168])/v[219] + (12*v[219] + 18)*(-v[174]*v[217] + v[60])/v[219] + (12*v[219] + 18)*(-v[215]*v[217] + v[184])/v[219] + (-pow(v[217], 2) + v[211])/v[219] + (-v[208]*v[217] + v[110])*(12*pow(v[219], 2) + 18*v[219] - 6*v[208] - 6*v[221] + 6*v[220] + 11)/v[219] + 6*(-v[137]*v[217] + v[34])/v[219] - 6*(-v[134]*v[217] + v[20])/v[219] + (-v[193]*v[217] + v[141])/v[219] + 4*(-v[152]*v[217] + v[50])/v[219] - 12*(-v[185]*v[217] + v[48])/v[219] + 8*(-v[163]*v[217] + v[51])/v[219] + (-v[221]*v[217] + v[160])*(12*pow(v[219], 2) + 18*v[219] - 6*v[208] - 6*v[221] + 6*v[220] + 11)/v[219] + 3*(-v[210]*v[217] + v[143])/v[219] - 6*(-v[169]*v[217] + v[52])/v[219] + (-v[220]*v[217] + v[153])*(-12*pow(v[219], 2) - 18*v[219] + 6*v[208] + 6*v[221] - 6*v[220] - 11)/v[219] + 3*(-v[198]*v[217] + v[144])/v[219] - 7*(-v[217]*v[216] + v[182])/v[219] + 12*(-v[217]*v[222] + v[191])/v[219] - 6*(-v[217]*v[213] + v[192])/v[219])/v[219] - 7*(((-24*pow(v[219], 3) - 36*pow(v[219], 2) + 24*v[219]*v[208] + 24*v[219]*v[221] - 24*v[219]*v[220] - 22*v[219] + 18*v[208] - 4*v[202] - 12*v[161] + 12*v[174] + 18*v[221] - 18*v[220] - 4*v[218] + 12*v[215] - 8*v[214] - 6)/v[219] - (-6*pow(v[219], 4) - 12*pow(v[219], 3) + 12*pow(v[219], 2)*v[208] + 12*pow(v[219], 2)*v[221] - 12*pow(v[219], 2)*v[220] - 11*pow(v[219], 2) + 18*v[219]*v[208] - 4*v[219]*v[202] - 12*v[219]*v[161] + 12*v[219]*v[174] + 18*v[219]*v[221] - 18*v[219]*v[220] - 4*v[219]*v[218] + 12*v[219]*v[215] - 8*v[219]*v[214] - 6*v[219] - 3*pow(v[208], 2) - 6*v[208]*v[221] + 6*v[208]*v[220] + 11*v[208] + 6*v[137] - 6*v[134] - 6*v[202] + v[193] - 18*v[161] + 18*v[174] + 4*v[152] - 12*v[185] + 8*v[163] - 3*pow(v[221], 2) + 6*v[221]*v[220] + 11*v[221] + 3*v[210] - 6*v[169] - 3*pow(v[220], 2) - 11*v[220] + 3*v[198] - 6*v[218] + 18*v[215] - 12*v[214] + v[217] - 7*v[216] + 12*v[222] - 6*v[213])/pow(v[219], 2))*(-v[219]*v[216] + v[186]) + (-12*v[219] - 18)*(-v[161]*v[216] + v[74])/v[219] + (-8*v[219] - 12)*(-v[214]*v[216] + v[150])/v[219] + (-4*v[219] - 6)*(-v[202]*v[216] + v[112])/v[219] + (-4*v[219] - 6)*(-v[218]*v[216] + v[149])/v[219] + (12*v[219] + 18)*(-v[174]*v[216] + v[54])/v[219] + (12*v[219] + 18)*(-v[215]*v[216] + v[178])/v[219] - 7*(-pow(v[216], 2) + v[200])/v[219] + (-v[208]*v[216] + v[106])*(12*pow(v[219], 2) + 18*v[219] - 6*v[208] - 6*v[221] + 6*v[220] + 11)/v[219] + 6*(-v[137]*v[216] + v[10])/v[219] - 6*(-v[134]*v[216] + v[32])/v[219] + (-v[193]*v[216] + v[108])/v[219] + 4*(-v[152]*v[216] + v[57])/v[219] - 12*(-v[185]*v[216] + v[56])/v[219] + 8*(-v[163]*v[216] + v[62])/v[219] + (-v[221]*v[216] + v[167])*(12*pow(v[219], 2) + 18*v[219] - 6*v[208] - 6*v[221] + 6*v[220] + 11)/v[219] + 3*(-v[210]*v[216] + v[117])/v[219] - 6*(-v[169]*v[216] + v[41])/v[219] + (-v[220]*v[216] + v[180])*(-12*pow(v[219], 2) - 18*v[219] + 6*v[208] + 6*v[221] - 6*v[220] - 11)/v[219] + 3*(-v[198]*v[216] + v[123])/v[219] + (-v[217]*v[216] + v[182])/v[219] + 12*(-v[216]*v[222] + v[164])/v[219] - 6*(-v[216]*v[213] + v[165])/v[219])/v[219] + 12*(((-24*pow(v[219], 3) - 36*pow(v[219], 2) + 24*v[219]*v[208] + 24*v[219]*v[221] - 24*v[219]*v[220] - 22*v[219] + 18*v[208] - 4*v[202] - 12*v[161] + 12*v[174] + 18*v[221] - 18*v[220] - 4*v[218] + 12*v[215] - 8*v[214] - 6)/v[219] - (-6*pow(v[219], 4) - 12*pow(v[219], 3) + 12*pow(v[219], 2)*v[208] + 12*pow(v[219], 2)*v[221] - 12*pow(v[219], 2)*v[220] - 11*pow(v[219], 2) + 18*v[219]*v[208] - 4*v[219]*v[202] - 12*v[219]*v[161] + 12*v[219]*v[174] + 18*v[219]*v[221] - 18*v[219]*v[220] - 4*v[219]*v[218] + 12*v[219]*v[215] - 8*v[219]*v[214] - 6*v[219] - 3*pow(v[208], 2) - 6*v[208]*v[221] + 6*v[208]*v[220] + 11*v[208] + 6*v[137] - 6*v[134] - 6*v[202] + v[193] - 18*v[161] + 18*v[174] + 4*v[152] - 12*v[185] + 8*v[163] - 3*pow(v[221], 2) + 6*v[221]*v[220] + 11*v[221] + 3*v[210] - 6*v[169] - 3*pow(v[220], 2) - 11*v[220] + 3*v[198] - 6*v[218] + 18*v[215] - 12*v[214] + v[217] - 7*v[216] + 12*v[222] - 6*v[213])/pow(v[219], 2))*(-v[219]*v[222] + v[187]) + (-12*v[219] - 18)*(-v[161]*v[222] + v[47])/v[219] + (-8*v[219] - 12)*(-v[214]*v[222] + v[156])/v[219] + (-4*v[219] - 6)*(-v[202]*v[222] + v[96])/v[219] + (-4*v[219] - 6)*(-v[218]*v[222] + v[166])/v[219] + (12*v[219] + 18)*(-v[174]*v[222] + v[67])/v[219] + (12*v[219] + 18)*(-v[215]*v[222] + v[154])/v[219] + 12*(-pow(v[222], 2) + v[209])/v[219] + (-v[208]*v[222] + v[115])*(12*pow(v[219], 2) + 18*v[219] - 6*v[208] - 6*v[221] + 6*v[220] + 11)/v[219] + 6*(-v[137]*v[222] + v[9])/v[219] - 6*(-v[134]*v[222] + v[35])/v[219] + (-v[193]*v[222] + v[91])/v[219] + 4*(-v[152]*v[222] + v[75])/v[219] - 12*(-v[185]*v[222] + v[71])/v[219] + 8*(-v[163]*v[222] + v[66])/v[219] + (-v[221]*v[222] + v[155])*(12*pow(v[219], 2) + 18*v[219] - 6*v[208] - 6*v[221] + 6*v[220] + 11)/v[219] + 3*(-v[210]*v[222] + v[128])/v[219] - 6*(-v[169]*v[222] + v[45])/v[219] + (-v[220]*v[222] + v[158])*(-12*pow(v[219], 2) - 18*v[219] + 6*v[208] + 6*v[221] - 6*v[220] - 11)/v[219] + 3*(-v[198]*v[222] + v[111])/v[219] + (-v[217]*v[222] + v[191])/v[219] - 7*(-v[216]*v[222] + v[164])/v[219] - 6*(-v[222]*v[213] + v[151])/v[219])/v[219] - 6*(((-24*pow(v[219], 3) - 36*pow(v[219], 2) + 24*v[219]*v[208] + 24*v[219]*v[221] - 24*v[219]*v[220] - 22*v[219] + 18*v[208] - 4*v[202] - 12*v[161] + 12*v[174] + 18*v[221] - 18*v[220] - 4*v[218] + 12*v[215] - 8*v[214] - 6)/v[219] - (-6*pow(v[219], 4) - 12*pow(v[219], 3) + 12*pow(v[219], 2)*v[208] + 12*pow(v[219], 2)*v[221] - 12*pow(v[219], 2)*v[220] - 11*pow(v[219], 2) + 18*v[219]*v[208] - 4*v[219]*v[202] - 12*v[219]*v[161] + 12*v[219]*v[174] + 18*v[219]*v[221] - 18*v[219]*v[220] - 4*v[219]*v[218] + 12*v[219]*v[215] - 8*v[219]*v[214] - 6*v[219] - 3*pow(v[208], 2) - 6*v[208]*v[221] + 6*v[208]*v[220] + 11*v[208] + 6*v[137] - 6*v[134] - 6*v[202] + v[193] - 18*v[161] + 18*v[174] + 4*v[152] - 12*v[185] + 8*v[163] - 3*pow(v[221], 2) + 6*v[221]*v[220] + 11*v[221] + 3*v[210] - 6*v[169] - 3*pow(v[220], 2) - 11*v[220] + 3*v[198] - 6*v[218] + 18*v[215] - 12*v[214] + v[217] - 7*v[216] + 12*v[222] - 6*v[213])/pow(v[219], 2))*(-v[219]*v[213] + v[183]) + (-12*v[219] - 18)*(-v[161]*v[213] + v[55])/v[219] + (-8*v[219] - 12)*(-v[214]*v[213] + v[148])/v[219] + (-4*v[219] - 6)*(-v[202]*v[213] + v[146])/v[219] + (-4*v[219] - 6)*(-v[218]*v[213] + v[170])/v[219] + (12*v[219] + 18)*(-v[174]*v[213] + v[58])/v[219] + (12*v[219] + 18)*(-v[215]*v[213] + v[190])/v[219] - 6*(-pow(v[213], 2) + v[201])/v[219] + (-v[208]*v[213] + v[92])*(12*pow(v[219], 2) + 18*v[219] - 6*v[208] - 6*v[221] + 6*v[220] + 11)/v[219] + 6*(-v[137]*v[213] + v[15])/v[219] - 6*(-v[134]*v[213] + v[21])/v[219] + (-v[193]*v[213] + v[98])/v[219] + 4*(-v[152]*v[213] + v[61])/v[219] - 12*(-v[185]*v[213] + v[68])/v[219] + 8*(-v[163]*v[213] + v[73])/v[219] + (-v[221]*v[213] + v[173])*(12*pow(v[219], 2) + 18*v[219] - 6*v[208] - 6*v[221] + 6*v[220] + 11)/v[219] + 3*(-v[210]*v[213] + v[131])/v[219] - 6*(-v[169]*v[213] + v[49])/v[219] + (-v[220]*v[213] + v[189])*(-12*pow(v[219], 2) - 18*v[219] + 6*v[208] + 6*v[221] - 6*v[220] - 11)/v[219] + 3*(-v[198]*v[213] + v[95])/v[219] + (-v[217]*v[213] + v[192])/v[219] - 7*(-v[216]*v[213] + v[165])/v[219] + 12*(-v[222]*v[213] + v[151])/v[219])/v[219]) / BinEntries);
		}
    	//========================
		// Formula Tag: New quantities
		if (strcmp(ParticleType, "Netp") == 0 ) { // only do ppb for netp
			//==== Formula Tag: p+pbar
				tppb = v[223];
			//==== Formula Tag: p+pbar error
				eppb = etc1;
			//==== Formula Tag: C2/p+pbar error
			//==== Formula Tag: C3/p+pbar error

			//==== Formula Tag: R31 error
		}

		//error calculation ends
		if(BinEntries < 1) {
			tc1 = tc2 = tc3 = tc4 = 0; 
			tk1 = tk2 = tk3 = tk4 = 0; 
			etc1 = etc2 = etc3 = etc4 = 0; 
			etk1 = etk2 = etk3 = etk4 = 0; 
			er21 = er32 = er42 = 0;
			ek21 = ek31 = ek41 = 0;
			tppb = eppb = er2s = er3s = er31 = 0;
		}
		_sC[0]->SetBinContent(iBin, NonNan(tc1));
		_sC[1]->SetBinContent(iBin, NonNan(tc2));
		_sC[2]->SetBinContent(iBin, NonNan(tc3));
		_sC[3]->SetBinContent(iBin, NonNan(tc4));
		_sppb->SetBinContent(iBin, NonNan(tppb));
		_sC[0]->SetBinError(iBin, NonNan(etc1));
		_sC[1]->SetBinError(iBin, NonNan(etc2));
		_sC[2]->SetBinError(iBin, NonNan(etc3));
		_sC[3]->SetBinError(iBin, NonNan(etc4));
		_sppb->SetBinError(iBin, NonNan(eppb));

		if (tc1 != 0) { 
			_sR21->SetBinContent(iBin, NonNan(tc2/tc1));
			_sR21->SetBinError(iBin, NonNan(er21));

			_sR31->SetBinContent(iBin, NonNan(tc3/tc1));
			_sR31->SetBinError(iBin, NonNan(er31));
		} else {
			_sR21->SetBinContent(iBin, 0);
			_sR21->SetBinError(iBin, NonNan(er21));

			_sR31->SetBinContent(iBin, 0);
			_sR31->SetBinError(iBin, NonNan(er31));	
		}
		if (tc2 != 0) { 
			_sR32->SetBinContent(iBin, NonNan(tc3/tc2));
			_sR32->SetBinError(iBin, NonNan(er32));

			_sR42->SetBinContent(iBin, NonNan(tc4/tc2));
			_sR42->SetBinError(iBin, NonNan(er42));
		} else {
			_sR32->SetBinContent(iBin, 0);
			_sR32->SetBinError(iBin, NonNan(er32));

			_sR42->SetBinContent(iBin, 0);
			_sR42->SetBinError(iBin, NonNan(er42));
		}
		if (tppb != 0) {
			_sR2s->SetBinContent(iBin, NonNan(tc2/tppb));
			_sR2s->SetBinError(iBin, NonNan(er2s));

			_sR3s->SetBinContent(iBin, NonNan(tc3/tppb));
			_sR3s->SetBinError(iBin, NonNan(er3s));
		} else {
			_sR2s->SetBinContent(iBin, 0);
			_sR2s->SetBinError(iBin, NonNan(er2s));

			_sR3s->SetBinContent(iBin, 0);
			_sR3s->SetBinError(iBin, NonNan(er3s));
		}

		_sk[0]->SetBinContent(iBin, NonNan(tk1));
		_sk[1]->SetBinContent(iBin, NonNan(tk2));
		_sk[2]->SetBinContent(iBin, NonNan(tk3));
		_sk[3]->SetBinContent(iBin, NonNan(tk4));
		_sk[0]->SetBinError(iBin, NonNan(etk1));
		_sk[1]->SetBinError(iBin, NonNan(etk2));
		_sk[2]->SetBinError(iBin, NonNan(etk3));
		_sk[3]->SetBinError(iBin, NonNan(etk4));

		if (tk1 != 0) {
			_sk21->SetBinContent(iBin, NonNan(tk2/tk1));
			_sk21->SetBinError(iBin, NonNan(ek21));

			_sk31->SetBinContent(iBin, NonNan(tk3/tk1));
			_sk31->SetBinError(iBin, NonNan(ek31));

			_sk41->SetBinContent(iBin, NonNan(tk4/tk1));
			_sk41->SetBinError(iBin, NonNan(ek41));
		} else {
			_sk21->SetBinContent(iBin, 0);
			_sk21->SetBinError(iBin, NonNan(ek21));

			_sk31->SetBinContent(iBin, 0);
			_sk31->SetBinError(iBin, NonNan(ek31));

			_sk41->SetBinContent(iBin, 0);
			_sk41->SetBinError(iBin, NonNan(ek41));
		}

  	} // mult bin loop ends
}

void ECorr::Save(const char *OutName) {

	TFile *out = new TFile(OutName, "recreate");
	out->cd();
	_sC[0]->Write();
	_sC[1]->Write();
	_sC[2]->Write();
	_sC[3]->Write();

	_sR21->Write();
	_sR31->Write();
	_sR32->Write();
	_sR42->Write();

	if (strcmp(ParticleType, "Netp") != 0) {
		_sk[0]->Write();
		_sk[1]->Write();
		_sk[2]->Write();
		_sk[3]->Write();

		_sk21->Write();
		_sk31->Write();
		_sk41->Write();
	}

	// new quantities
	if (strcmp(ParticleType, "Netp") == 0) {
		_sppb->Write();
		_sR2s->Write();
		_sR3s->Write();
	}
	hEntries->Write();
	out->Close();
}

void ECorr::Update(const char* OutName) {

	TFile *out = new TFile(OutName, "update");
	out->cd();
	_sC[0]->Write();
	_sC[1]->Write();
	_sC[2]->Write();
	_sC[3]->Write();

	_sR21->Write();
	_sR31->Write();
	_sR32->Write();
	_sR42->Write();

	if (strcmp(ParticleType, "Netp") != 0) {
		_sk[0]->Write();
		_sk[1]->Write();
		_sk[2]->Write();
		_sk[3]->Write();

		_sk21->Write();
		_sk31->Write();
		_sk41->Write();
	}

	// new quantities
	if (strcmp(ParticleType, "Netp") == 0) {
		_sppb->Write();
		_sR2s->Write();
		_sR3s->Write();
	}

	hEntries->Write();

  	out->Close();
}

void ECorr::ReadTerms(const char *FileName) {
	TFile *inf = new TFile(FileName);
	std::map<const char*, TProfile*>::iterator iter;
	TIter nextkey(inf->GetListOfKeys());
	TKey *key;
	while((key = (TKey*)nextkey())) {
		TString strName = key->ReadObj()->GetName();
		if(strName.Contains(ParticleType)) {
			strName.Replace(0, strlen(ParticleType)+1, "");
			int iT = 0;
			while (true) {
				if(strcmp(strName, Terms[iT])==0) {
					_V[iT+1] = (TProfile*) key->ReadObj()->Clone();
					break;
				} else { iT++; }
			}
		}
	}
	TProfile* ent = (TProfile*)inf->Get(Form("%s_q01_01", ParticleType));
	for(int i=1; i<ent->GetNbinsX(); ++i) {
		hEntries->SetBinContent(i, ent->GetBinEntries(i));
	}
}

//==================================================================
//CumulantOrder : [1,4], 0 for p+pbar
TH1D* ECorr::GetCumulant(int Order) {
	if(Order<=4 && Order>=1) { return _sC[Order-1]; }
	else if (Order == 0) { return _sppb; }
	else {
		std::cout << "[ERROR] GetCumulant: Invalid cumulant order " << Order << ", shoule be within 1 to 4 (or 0 for p+pbar)!" << std::endl;
		abort();
  }
}

//==================================================================
//candidate : 21 32 42 20 30 31
TH1D* ECorr::GetCumulantRatio(int RatioName){
	if (RatioName == 21) { return _sR21; }
	else if(RatioName == 32) { return _sR32; }
	else if(RatioName == 42) { return _sR42; }
	// new quantities
	else if(RatioName == 20) { return _sR2s; }
	else if(RatioName == 30) { return _sR3s; }
	else if(RatioName == 31) { return _sR31; }
	else {
		std::cout << "[ERROR] GetCumulantRatio: Invalid ratio name " << RatioName << ", shoule be one of 21, 32, 42, 20, 30, 31!" << std::endl;
		abort();
	}
}

TH1D* ECorr::GetFactorialCumulant(int Order) {
	if(Order<=4 && Order>=1) { return _sk[Order-1]; }
	else {
		std::cout << "[ERROR] GetFactorialCumulant: Invalid order " << Order << ", shoule be within 1 to 4!" <<std::endl;
		abort();
	}
}

TH1D* ECorr::GetFactorialCumulantRatio(int RatioName){
	if (RatioName == 21) { return _sk21; }
	else if(RatioName == 31) { return _sk31; }
	else if(RatioName == 41) { return _sk41; }
	else {
		std::cout << "[ERROR] GetFactorialCumulantRatio: Invalid ratio name " << RatioName << ", shoule be one of 21, 31, 41!" << std::endl;
		abort();
	}
}

TH1D* ECorr::GetEntriesHistogram(){
  	return hEntries;
}
